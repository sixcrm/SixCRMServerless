service: sixtransaction
package:
  exclude:
    - .git/**
    
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  stage: ${opt:stage, 'development'}
  region: us-east-1
  profile: six

site_config: ${file(./config/${opt:stage}/site.yml)}
dynamo_config: ${file(./config/${opt:stage}/dynamo.yml)}

functions:
  verifysignature:
    handler: authorizers/verifysignature/handler.verifysignature
    environment:
      dynamo_table: access_keys
  verifyjwt:
    handler: authorizers/verifyjwt/handler.verifyjwt
  acquiretoken:
    handler: endpoints/acquiretoken/handler.acquiretoken
    events:
      - http:
         path: token/acquire
         method: get
         cors: true
         authorizer:
            name: verifysignature
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    environment:
      #these need to come from config files
      dynamo_table: access_keys
      site_secret_jwt_key: abc123
  createlead:
    handler: endpoints/createlead/handler.createlead
    events:
      - http:
         path: lead/create
         method: post
         cors: true
         authorizer:
           name: verifyjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
#  createorder:
#    handler: endpoints/createorder/handler.createorder
#    events:
#      - http:
#         path: order/create
#         method: post
#        cors: true
    #environment:
      #site_secret_key: ${file(./config/${opt:stage}/site.yml):site_secret_key}
#  editorder:
#    handler: endpoints/updateorder/handler.updateorder
#    events:
#      - http:
#         path: order/update
#         method: put
#         cors: true
    #environment:
      #site_secret_key: ${file(./config/${opt:stage}/site.yml):site_secret_key}
#  confirmorder:
#    handler: endpoints/confirmorder/handler.confirmorder
#    events:
#      - http:
 #        path: order/confirm
#         method: get
#         cors: true
    #environment:
      #user_secret_key: ${file(./config/${opt:stage}/site.yml):user_secret_key}
resources:  
  Resources:
    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: access_keys
        AttributeDefinitions:
          - AttributeName: access_key
            AttributeType: S
        KeySchema:
          - AttributeName: access_key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: DynamoDbTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
           - Effect: Allow
             Action:
               - dynamodb:GetItem
               - dynamodb:PutItem
             Resource: arn:aws:dynamodb:*:*:table/access_keys
        Roles:
          - Ref: IamRoleLambdaExecution