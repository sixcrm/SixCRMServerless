service: sixtransaction
package:
  exclude:
    - .git/**
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless/**
    - node_modules/serverless-offline/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/mocha/**
    - node_modules/chai/**
    - node_modules/chai-json-schema/**
    - node_modules/supertest/**

# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  stage: ${opt:stage, 'development'}
  region: us-east-1
  profile: six

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8001
      inMemory: true
      migration: true
    migration:
      table_prefix: ${opt:stage}
      dir: ./dynamolocal/migrations

site_config: ${file(./config/${opt:stage}/site.yml)}

functions:

########################
# Authorizers qualify requests passing through API Gateway
########################

  verifysignature:
    handler: authorizers/verifysignature/handler.verifysignature
    environment:
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      stage: ${opt:stage}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  verifyjwt:
    handler: authorizers/verifyjwt/handler.verifyjwt
    environment:
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      secret_key: ${file(./config/${opt:stage}/site.yml):jwt.transaction_key}
      stage: ${opt:stage}
      development_bypass: ${file(./config/${opt:stage}/site.yml):jwt.development_bypass}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  verifyauth0jwt:
    handler: authorizers/verifyjwt/handler.verifyjwt
    environment:
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      secret_key: ${file(./config/${opt:stage}/site.yml):jwt.auth0.secret_key}
      stage: ${opt:stage}
      development_bypass: ${file(./config/${opt:stage}/site.yml):jwt.development_bypass}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

########################
# Backend Graph Endpoint renders entity data to the website
########################

  graph:
    handler: endpoints/graph/handler.graph
    events:
      - http:
          path: graph/{account}
          method: post
          cors: true
          authorizer:
            name: verifyauth0jwt
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    environment:
      stage: ${opt:stage}
      customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
      loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
      merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      emails_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.emails_table}
      smtp_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.smtp_providers_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
      roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

########################
# State Machine Lambdas
########################

# Movement Managers 
 
  billtohold:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      failure_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_failed_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.billtohold}
      
  recovertohold:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: cron(0 1 ? * FRI *)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.recover_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.recovertohold}
      
  holdtopending:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.holdtopending}
      failure_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_failed_queue_url}
      
  pendingfailedtopending:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(6 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_failed_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.pendingfailedtopending}
      
  pendingtoshipped:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.shipped_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.pendingtoshipped}

  shippedtodelivered:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.shipped_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.delivered_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.shippedtodelivered}

# Archive Methods (Exit Points)

  deliveredtoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.delivered_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.deliveredtoarchive}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):lambda.endpoint} #Technical Debt:  Why is this here?
      archivefilter: 'ALL'
      
  holdtoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.holdtoarchive}
      archivefilter: 'NOSHIP'

  rebilltoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.rebill_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.createrebillstoarchive}
      archivefilter: 'ALL'

  recovertoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(6 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.recover_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.recovertoarchive}
      archivefilter: 'TWOATTEMPTS'
      
# Workers

  createrebills:
    handler: workers/createrebills/handler.createrebills
    events:
      - schedule:
          rate: rate(2 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      rebill_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.rebill_queue_url}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      
  pickrebill:
    handler: workers/pickrebill/handler.pickrebill
    events:
      - schedule:
          rate: rate(2 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      bill_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_queue_url}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  processbilling:
    handler: workers/processbilling/handler.processbilling
    environment:
      stage: ${opt:stage}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
      loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
      merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}

  shipproduct:
    handler: workers/shipproduct/handler.shipproduct
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  confirmshipped:
    handler: workers/confirmshipped/handler.confirmshipped
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      
  confirmdelivered:
    handler: workers/confirmdelivered/handler.confirmdelivered
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      usps_user_id: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.user_id}
      usps_password: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.password}
  
  archivedelivered:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'ALL'
  
  archivehold:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'NOSHIP'
      
  archiverecover:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'TWOATTEMPTS'
       
  test:
    handler: workers/test/handler.test
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      usps_user_id: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.user_id}
      usps_password: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.password}
      workerfunction: sixtransaction-${opt:stage}-confirmdelivered

########################
# Transaction Endpoints  (initial customer entrypoint)
########################

  acquiretoken:
    handler: endpoints/acquiretoken/handler.acquiretoken
    events:
      - http:
         path: token/acquire
         method: get
         cors: true
         authorizer:
            name: verifysignature
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    environment:
      site_secret_jwt_key: ${file(./config/${opt:stage}/site.yml):jwt.transaction_key}
      stage: ${opt:stage}

  createlead:
    handler: endpoints/createlead/handler.createlead
    events:
      - http:
         path: lead/create
         method: post
         cors: true
         authorizer:
           name: verifyjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
        campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        stage: ${opt:stage}

  createorder:
    handler: endpoints/createorder/handler.createorder
    events:
      - http:
         path: order/create
         method: post
         cors: true
         authorizer:
           name: verifyjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
        credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
        transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
        campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
        loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
        product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
        affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
        merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
        fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
        rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
        hold_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
        bill_failed_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_failed_queue_url}
        stage: ${opt:stage}

  confirmorder:
    handler: endpoints/confirmorder/handler.confirmorder
    events:
      - http:
         path: order/confirm
         method: get
         cors: true
         authorizer:
           name: verifyjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
        transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
        stage: ${opt:stage}

########################
# Resource definitions for required system resources
########################

resources:
  Resources:
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
           - Effect: Allow
             Action:
               - dynamodb:*
             Resource: arn:aws:dynamodb:*:*:table/*
           - Effect: Allow
             Action:
               - sqs:*
             Resource: arn:aws:sqs:*:*:*
           - Effect: Allow
             Action:
               - lambda:*
             Resource: arn:aws:lambda:us-east-1:*:*:*
        Roles:
          - Ref: IamRoleLambdaExecution
