service: sixtransaction
package:
  exclude:
    - .git/**
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless/**
    - node_modules/serverless-offline/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/mocha/**
    - node_modules/chai/**
    - node_modules/chai-json-schema/**
    - node_modules/supertest/**

# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  stage: ${opt:stage, 'development'}
  region: us-east-1
  profile: six

plugins:
  - serverless-dynamodb-local

custom:
  dynamodb:
    start:
      port: 8001
      inMemory: true
      migration: true
    migration:
      table_prefix: ${opt:stage}
      dir: ./dynamolocal/migrations

site_config: ${file(./config/${opt:stage}/site.yml)}

functions:

########################
# Authorizers qualify requests passing through API Gateway
########################

  verifysignature:
    handler: authorizers/verifysignature/handler.verifysignature
    environment:
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      stage: ${opt:stage}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  verifytransactionjwt:
    handler: authorizers/verifytransactionjwt/handler.verifyjwt
    environment:
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      secret_key: ${file(./config/${opt:stage}/site.yml):jwt.transaction.secret_key}
      stage: ${opt:stage}
      development_bypass: ${file(./config/${opt:stage}/site.yml):jwt.development_bypass}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  verifyauth0jwt:
    handler: authorizers/verifyauth0jwt/handler.verifyjwt
    environment:
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      secret_key: ${file(./config/${opt:stage}/site.yml):jwt.auth0.secret_key}
      stage: ${opt:stage}
      development_bypass: ${file(./config/${opt:stage}/site.yml):jwt.development_bypass}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

########################
# Backend Graph Endpoint renders entity data to the website
########################

  graph:
    handler: endpoints/graph/handler.graph
    events:
      - http:
          path: graph/{account}
          method: post
          cors: true
          authorizer:
            name: verifyauth0jwt
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    environment:
      SIX_VERBOSE: 2
      stage: ${opt:stage}
      usecache: ${file(./config/${opt:stage}/site.yml):cache.usecache}
      cachebuster: ${file(./config/${opt:stage}/site.yml):cache.cachebuster}
      customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
      customer_notes_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customer_notes_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
      loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
      merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      user_device_tokens_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_device_tokens_table}
      user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
      user_settings_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_settings_table}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      email_templates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.email_templates_table}
      smtp_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.smtp_providers_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
      notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_table}
      notifications_read_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_read_table}
      notification_settings_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notification_settings_table}
      roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      redshift_user: ${file(./config/${opt:stage}/site.yml):redshift.user}
      redshift_password: ${file(./config/${opt:stage}/site.yml):redshift.password}
      redshift_host: ${file(./config/${opt:stage}/site.yml):redshift.host}
      redshift_database: ${file(./config/${opt:stage}/site.yml):redshift.database}
      redshift_port: ${file(./config/${opt:stage}/site.yml):redshift.port}
      redshift_pool_max: ${file(./config/${opt:stage}/site.yml):redshift.user}
      redshift_idle_timeout: ${file(./config/${opt:stage}/site.yml):redshift.idleTimeoutMillis}
      search_indexing_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
      elasticache_endpoint: ${file(./config/${opt:stage}/site.yml):elasticache.endpoint}
      elasticache_port: ${file(./config/${opt:stage}/site.yml):elasticache.port}
      elasticache_retry_time: ${file(./config/${opt:stage}/site.yml):elasticache.retry_time}
      elasticache_max_attempts: ${file(./config/${opt:stage}/site.yml):elasticache.max_attempts}
      logging: ${file(./config/${opt:stage}/site.yml):logging.loglevel}


########################
# State Machine Lambdas
########################

# Movement Managers

  billtohold:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      failure_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_failed_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.billtohold}

  recovertohold:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: cron(0 1 ? * FRI *)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.recover_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.recovertohold}

  holdtopending:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.holdtopending}
      failure_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_failed_queue_url}

  pendingfailedtopending:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(6 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_failed_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.pendingfailedtopending}

  pendingtoshipped:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.pending_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.shipped_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.pendingtoshipped}

  shippedtodelivered:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.shipped_queue_url}
      destination_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.delivered_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.shippedtodelivered}

# Archive Methods (Exit Points)

  deliveredtoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.delivered_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.deliveredtoarchive}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):lambda.endpoint} #Technical Debt:  Why is this here?
      archivefilter: 'ALL'

  holdtoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.holdtoarchive}
      archivefilter: 'NOSHIP'

  rebilltoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.rebill_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.createrebillstoarchive}
      archivefilter: 'ALL'

  recovertoarchive:
    handler: workers/forwardmessage/handler.forwardmessage
    events:
      - schedule:
          rate: rate(6 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.recover_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.recovertoarchive}
      archivefilter: 'TWOATTEMPTS'

  indextoarchive:
    handler: workers/forwardmessages/handler.forwardmessages
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}
      origin_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
      workerfunction: ${file(./config/${opt:stage}/site.yml):lambda.function_names.indextoarchive}
      archivefilter: 'ALL'

# Workers

  sesnotifications:
    handler: workers/sesnotifications/handler.sesnotifications
    events:
      - sns:
          topicName: SESNotifications
          displayName: SES Notifications
    environment:
      stage: ${opt:stage}
      ses_notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.ses_notifications_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  slackalarm:
    handler: workers/slackalarm/exports.handler
    events:
      - sns:
          topicName: SlackAlarm
          displayName: Slack Alarm
    environment:
      stage: ${opt:stage}
      slackChannel: '#lambdas'
      kmsEncryptedHookUrl: AQECAHj80T7Kli3v5wZmKcPbVFGj7MRHdpLvshzuP2ZIJ3vvjgAAAKcwgaQGCSqGSIb3DQEHBqCBljCBkwIBADCBjQYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAyN9XeW0Dk18ZFGQkYCARCAYL6U9hWmdM7Nz+yL0I78O5CU2FPHpzj3/o9yQmpsVaBuSztYipLnam5mlwbfx7mn5cKn8xNyTOD3WGfondnCsVsGyeIVIJJMZs1RWYW3ix18FukLP54LZXctfadN2CcvPQ==

  indexentities:
    handler: workers/indexentities/handler.indexentities
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
    environment:
      stage: ${opt:stage}

  createrebills:
    handler: workers/createrebills/handler.createrebills
    events:
      - schedule:
          rate: rate(2 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      rebill_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.rebill_queue_url}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  pickrebill:
    handler: workers/pickrebill/handler.pickrebill
    events:
      - schedule:
          rate: rate(2 hours)
          enabled: true
    environment:
      stage: ${opt:stage}
      bill_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_queue_url}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  processbilling:
    handler: workers/processbilling/handler.processbilling
    environment:
      stage: ${opt:stage}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
      sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
      loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
      product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
      affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
      merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      access_keys_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.access_keys_table}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}

  shipproduct:
    handler: workers/shipproduct/handler.shipproduct
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  confirmshipped:
    handler: workers/confirmshipped/handler.confirmshipped
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}

  confirmdelivered:
    handler: workers/confirmdelivered/handler.confirmdelivered
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      usps_user_id: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.user_id}
      usps_password: ${file(./config/${opt:stage}/site.yml):shipping_providers.usps.password}

  archivedelivered:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'ALL'

  archivehold:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'NOSHIP'

  archiverecover:
    handler: workers/archive/handler.archive
    environment:
      stage: ${opt:stage}
      rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
      transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
      products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
      shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      archivefilter: 'TWOATTEMPTS'

########################
# Transaction Endpoints  (initial customer entrypoint)
########################

  acquiretoken:
    handler: endpoints/acquiretoken/handler.acquiretoken
    events:
      - http:
         path: token/acquire/{account}
         method: get
         cors: true
         authorizer:
            name: verifysignature
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    environment:
      transaction_secret_key: ${file(./config/${opt:stage}/site.yml):jwt.transaction.secret_key}
      users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
      user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
      accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
      roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
      dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
      stage: ${opt:stage}

  createlead:
    handler: endpoints/createlead/handler.createlead
    events:
      - http:
         path: lead/create/{account}
         method: post
         cors: true
         authorizer:
           name: verifytransactionjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
        campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
        accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
        users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
        user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
        roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_table}
        search_indexing_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
        stage: ${opt:stage}

  createorder:
    handler: endpoints/createorder/handler.createorder
    events:
      - http:
         path: order/create/{account}
         method: post
         cors: true
         authorizer:
           name: verifytransactionjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
        credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
        transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
        campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
        loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
        product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
        affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
        merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
        fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
        rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
        hold_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
        bill_failed_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_failed_queue_url}
        shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
        accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
        users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
        user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
        roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
        notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_table}
        search_indexing_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
        stage: ${opt:stage}

  createupsell:
    handler: endpoints/createupsell/handler.createupsell
    events:
      - http:
         path: upsell/create/{account}
         method: post
         cors: true
         authorizer:
           name: verifytransactionjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
        credit_cards_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.credit_cards_table}
        transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
        campaigns_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.campaigns_table}
        loadbalancers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.loadbalancers_table}
        product_schedules_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.product_schedules_table}
        affiliates_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.affiliates_table}
        merchant_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.merchant_providers_table}
        fulfillment_providers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.fulfillment_providers_table}
        rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
        shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
        accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
        users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
        user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
        roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
        hold_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.hold_queue_url}
        bill_failed_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.bill_failed_queue_url}
        notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_table}
        search_indexing_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
        stage: ${opt:stage}

  confirmorder:
    handler: endpoints/confirmorder/handler.confirmorder
    events:
      - http:
         path: order/confirm/{account}
         method: get
         cors: true
         authorizer:
           name: verifytransactionjwt
           resultTtlInSeconds: 0
           identitySource: method.request.header.Authorization
    environment:
        dynamo_endpoint: ${file(./config/${opt:stage}/site.yml):dynamodb.endpoint}
        sessions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.sessions_table}
        products_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.products_table}
        transactions_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.transactions_table}
        customers_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.customers_table}
        rebills_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.rebills_table}
        shipping_receipts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.shipping_receipts_table}
        accounts_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.accounts_table}
        users_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.users_table}
        user_acls_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.user_acls_table}
        roles_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.roles_table}
        notifications_table: ${opt:stage}${file(./config/${opt:stage}/site.yml):dynamodb.notifications_table}
        search_indexing_queue_url: ${file(./config/${opt:stage}/site.yml):sqs.search_indexing_queue_url}
        stage: ${opt:stage}

########################
# Resource definitions for required system resources
########################

resources:
  Resources:
    ShippedQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-shipped
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    RecoverQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-recover
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    RebillFailedQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-rebill-failed
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    RebillQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-rebill
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    PendingFailedQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-pending-failed
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    PendingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-pending
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    HoldQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-hold
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    DeliveredQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-delivered
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    BillingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-bill
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    SearchIndexingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-searchindex
        MessageRetentionPeriod: '345600'
        VisibilityTimeout: '30'
        MaximumMessageSize: '262144'
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
           - Effect: Allow
             Action:
               - dynamodb:*
             Resource: arn:aws:dynamodb:*:*:table/*
           - Effect: Allow
             Action:
               - sqs:*
             Resource: arn:aws:sqs:*:*:*
           - Effect: Allow
             Action:
               - lambda:*
             Resource: arn:aws:lambda:us-east-1:*:*:*
           - Effect: Allow
             Action:
               - ses:*
             Resource: arn:aws:ses:us-east-1:*:identity/*
           - Effect: Allow
             Action:
               - cloudsearch:*
             Resource: 	arn:aws:cloudsearch:us-east-1:*:*
        Roles:
          - Ref: IamRoleLambdaExecution
#    SixEncryptionKey:
#        Type: AWS::KMS::Key
#        Properties:
#          Description: 'A sample key'
#          KeyPolicy:
#            Version: '2012-10-17'
#            Id: 'key-default-1'
#            Statement:
#              -
#                Sid: 'Allow administration of the key'
#                Effect: 'Allow'
#                Principal:
#                  AWS: 'arn:aws:iam::068070110666:user/TimothyDalbey'
#                Action:
#                  - 'kms:*'
#                Resource: '*'
#              -
#                Sid: 'Allow use of the key'
#                Effect: 'Allow'
#                Principal:
#                  AWS: 'arn:aws:iam::068070110666:role/sixtransaction-development-us-east-1-lambdaRole'
#                Action:
#                  - 'kms:Encrypt'
#                  - 'kms:Decrypt'
#                  - 'kms:ReEncrypt*'
#                  - 'kms:GenerateDataKey*'
#                  - 'kms:DescribeKey'
#                Resource: '*'
