aws:
  region: 'us-east-1'
  account: '181111172466'

ses:
  hostname: email-smtp.us-east-1.amazonaws.com
  port: 465
  username: 'ses-smtp-user.20170828-131229'
  smtp_username: 'AKIAJRAITRA47FQLFTOA'
  smtp_password: 'Al7bmGAKGupiC8d+aXTqINwbEmLP9nsDgPGLw1GZLl7V'
  default_sender_email: 'info@sixcrm.com'
  default_sender_name: 'SixCRM'

#Technical Debt:  This sort of thing should be encrypted...
jwt:
  issuer: 'https://api.sixcrm.com'
  development_bypass: 'deathstalker'
  site: #This is the key for all graph requests (AKA Six users)
    secret_key: 'pO9HJmVXzTOagNP-xW9Es8-s0HGQt28hqlvAPJx6e6rHeryvnyBGDn-LJn_80XdV'
    domain: ''
    expiration: 3600
  transaction: #This is the key for the transactional endpoint requests (AKA non-Six users...)
    secret_key: 'ashdaiuwdaw9d0u197f02ji9ujoja90juahwi'
    expiration: 3600

dynamodb:
  endpoint: ''

sqs:
  deadletter_postfix: '_deadletter'
  max_receive_count: 5

cloudsearch:
  domainname: 'sixcrm'

#Technical Debt:  Let's eliminate this.
lambda:
  endpoint: ''
  function_names:
    deliveredtoarchive: 'archivedelivered'
    shippedtodelivered: 'confirmdelivery'
    pendingtoshipped: 'confirmshipped'
    pendingfailedtopending: 'shipproduct'
    holdtopending: 'shipproduct'
    holdtoarchive: 'archivehold'
    billtohold: 'processbilling'
    recovertohold: 'processbilling'
    createrebillstoarchive: 'createrebills'
    recovertoarchive: 'archiverecover'
    indextoarchive: 'indexentities'
    forwardmessage_deliveredtoarchive: 'deliveredtoarchive'
    forwardmessage_shippedtodelivered: 'shippedtodelivered'
    forwardmessage_pendingtoshipped: 'pendingtoshipped'
    forwardmessage_pendingfailedtopending: 'pendingfailedtopending'
    forwardmessage_holdtopending: 'holdtopending'
    forwardmessage_holdtoarchive: 'holdtoarchive'
    forwardmessage_billtohold: 'billtohold'
    forwardmessage_recovertohold: 'recovertohold'
    forwardmessage_createrebillstoarchive: 'rebilltoarchive'
    forwardmessage_indextoarchive: 'indextoarchive'
    forwardmessage_recovertoarchive: 'recovertoarchive'

shipping_providers:
  usps:
    user_id: '005SIXCR2114'
    password: '392VM80MW850'

#Technical Debt:  Username and Password combinations need to be encrypted...
redshift:
  user: 'admin'
  database: 'analytics'
  password: 'Jagodica9'
  port: 5439
  max: 10
  idle_timeout: 30000
  #Technical Debt:  Remove
  randomdata:
    interval: 300

notifications:
  apn:
    token_key: ''
    token_key_id: ''
    token_team_id: ''
    production: false

#Technical Debt:  Down the road, we may have numerous caching strategies and we will need to be able to configure them dynamically
cache:
  #Technical Debt:  Turning this to 0 breaks everything...
  usecache: 1
  cachebuster: 'somerandomthing1'

elasticache:
  max_attempts: 3
  retry_time: 1800000
  endpoint: '34.231.222.227'
  port: 6379
  default_expiration: 300

logging:
  loglevel: 0

slack:
  channel: '#lambdas'
  kms_encrypted_hook_url: 'AQECAHj80T7Kli3v5wZmKcPbVFGj7MRHdpLvshzuP2ZIJ3vvjgAAAKcwgaQGCSqGSIb3DQEHBqCBljCBkwIBADCBjQYJKoZIhvcNAQcBMB4GCWCGSAFlAwQBLjARBAyN9XeW0Dk18ZFGQkYCARCAYL6U9hWmdM7Nz+yL0I78O5CU2FPHpzj3/o9yQmpsVaBuSztYipLnam5mlwbfx7mn5cKn8xNyTOD3WGfondnCsVsGyeIVIJJMZs1RWYW3ix18FukLP54LZXctfadN2CcvPQ=='
