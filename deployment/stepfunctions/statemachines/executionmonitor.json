{
  "Comment": "The execution monitor executes other step functions and reports thier status to ElastiSearch for indexing.",
  "StartAt": "Get Execution ID",
  "States": {
    "Get Execution ID": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:{{aws_region}}:{{aws_account_id}}:function:sixcrm-{{stage}}-getexecutionid",
      "Next": "Has Execution ID?",
      "InputPath": "$",
      "ResultPath": "$.executionid",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 10,
          "MaxAttempts": 5,
          "BackoffRate": 5
        }
      ]
    },
    "Has Execution ID?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.executionid",
          "StringEquals": "NOEXECUTIONID",
          "Next": "Start Execution"
        }
      ],
      "Default": "Get Execution State"
    },
    "Start Execution": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:{{aws_region}}:{{aws_account_id}}:function:sixcrm-{{stage}}-startexecution",
      "InputPath": "$",
      "ResultPath": "$.executionid",
      "Next":"Get Execution State",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ]
    },
    "Get Execution State": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:{{aws_region}}:{{aws_account_id}}:function:sixcrm-{{stage}}-getexecutionstate",
      "Next": "Report Execution State",
      "InputPath": "$",
      "ResultPath": "$.executionstate",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 10,
          "MaxAttempts": 5,
          "BackoffRate": 5
        }
      ]
    },
    "Report Execution State": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:{{aws_region}}:{{aws_account_id}}:function:sixcrm-{{stage}}-reportexecutionstate",
      "InputPath": "$",
      "Next":"Continue Reporting?",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ]
    },
    "Continue Reporting?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.executionstate.status",
          "StringEquals": "RUNNING",
          "Next": "Wait 30 Seconds"
        }
      ],
      "Default": "Monitoring Complete"
    },
    "Wait 30 Seconds": {
      "Type": "Wait",
      "Seconds": 21600,
      "Next": "Get Execution State"
    },
    "Monitoring Complete": {
      "Type": "Succeed",
      "End":true
    }
  }
}
