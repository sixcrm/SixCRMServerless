# Technical Debt: AWS user is over-permissioned
# Technical Debt: AWS user needs cross account access
# Technical Debt: Add SES deployment
# Technical Debt: Add CloudSearch configuration

general:
  branches:
    only:
      - production
      - staging
      - development

machine:
  timezone:
    America/Los_Angeles
  node:
    version: 7.6.0
  environment:
    AWS_ACCOUNT: '068070110666'
    AWS_REGION: 'us-east-1'
    SIX_VERBOSE: '2'
  services:
    - redis
    - elasticsearch
    # Add dynamoDB

dependencies:
  post:
    - serverless dynamodb install --stage $CIRCLE_BRANCH

test:
  override:
    - npm run lint
    - npm run test-unit


deployment:
  production:
    branch: production
    commands:
      - ./deployment/environment/deploy_production.sh
  staging:
    branch: staging
    commands:
      - ./deployment/utilities/merge_branches.sh staging production
  development:
    branch: development
    commands:

      #Serverless (Lambdas, API Gateway, Roles)
      - serverless deploy --stage $CIRCLE_BRANCH

      #SQS
      - node ./deployment/sqs/purge_queues.js $CIRCLE_BRANCH $AWS_ACCOUNT $AWS_REGION
      - node ./deployment/sqs/deploy_queues.js $CIRCLE_BRANCH

      #CloudSearch
      #Technical Debt:  This needs to be configured for multi-environment purges
      - node ./deployment/cloudsearch/purge_index.js $CIRCLE_BRANCH
      # - node ./deployment/cloudsearch/deploy.js sixcrm-$CIRCLE_BRANCH

      #DynamoDB
      - npm run purge-tables $CIRCLE_BRANCH
      - npm run deploy-tables $CIRCLE_BRANCH $AWS_REGION
      - npm run deploy-seeds $CIRCLE_BRANCH

      #Redshift
      #Create cluster if does not exist.
      - node ./deployment/redshift/create_cluster.js $CIRCLE_BRANCH
      #Purge tables.
      - node ./deployment/redshift/purge_redshift.js $CIRCLE_BRANCH

      # Technical Debt:  Add Elasticache and NAT Instance (where necessary)
      # Technical Debt:  Use Route53 for resource mappings
      # Technical Debt: API Gateway Custom Domain needs to be mapped to new domain when creating and "hard updating"

      - export SIX_VERBOSE=0 && npm run test-integration

      # Merge to upper environment
      - ./deployment/utilities/merge_branches.sh development staging
