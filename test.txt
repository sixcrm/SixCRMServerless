
> sixcrm-transaction-api@1.0.0 test-queries /home/aldo/Projects/toptal/SixCrm/sixcrmserverless
> ENV=local stage=local AWS_PROFILE=six istanbul cover node_modules/.bin/_mocha --recursive test/config/global.js './test/functional/queries/**/*.test.js'

Set Status
Configuration status: loading
Handle Stage
Resolve Stage
********************


Stage: local


********************
Set Environment Variable
Set Configuration Files
Get Serverless Config
Get Site Config
Evaluate Status
Set Status
Configuration status: loading
Clear
Set Environment Configuration Files
Get Environment Config
Get Configuration
Get S3 Environment Configuration
Parse
Get Token
Get Token Value
Recurse
Get Token
Replace Tokens With Values
Object Exists
{ Bucket: 'sixcrm-local-configuration-master',
  Key: 'config.json' }
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Get Configuration File


  queries/redshift-queries.js
    activity
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getActivity
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getActivity/*
Permissions: 
{ allow: [ 'analytics/getActivity' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Activity
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  action: [ 'continued' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'action',
  'actor',
  'actor_type',
  'acted_upon',
  'acted_upon_type',
  'associated_with',
  'associated_with_type',
  'account' ]
action
[ 'continued' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
activity query parameters
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  action: [ 'continued' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND action IN (\'continued\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/activity/parameter_validation.json
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  action: [ 'continued' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND action IN (\'continued\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/ActivityValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     email: 
      { type: 'string',
        pattern: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     actor: 
      { type: 'array',
        minItems: 1,
        items: 
         { oneOf: 
            [ { '$ref': '#/definitions/UUIDv4' },
              { '$ref': '#/definitions/email' } ] },
        uniqueItems: true },
     acted_upon: 
      { type: 'array',
        minItems: 1,
        items: 
         { oneOf: 
            [ { '$ref': '#/definitions/UUIDv4' },
              { '$ref': '#/definitions/email' } ] },
        uniqueItems: true },
     'associated_with:': 
      { type: 'array',
        minItems: 1,
        items: 
         { oneOf: 
            [ { '$ref': '#/definitions/UUIDv4' },
              { '$ref': '#/definitions/email' } ] },
        uniqueItems: true },
     actor_type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'merchant processor', 'system', 'customer' ] } },
     action: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'continued', 'deleted', 'created new' ] } },
     acted_upon_type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'merchant processor', 'system', 'customer' ] } },
     associated_with_type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'merchant processor', 'system', 'customer' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/activity/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  fa.id,
  fa.datetime,
  coalesce(fa.actor,'') AS actor,
  coalesce(fa.actor_type,'') AS actor_type,
  coalesce(fa.action,'') AS action,
  coalesce(fa.acted_upon,'') AS acted_upon,
  coalesce(fa.acted_upon_type,'') AS acted_upon_type,
  coalesce(fa.associated_with,'') AS associated_with,
  coalesce(fa.associated_with_type,'') AS associated_with_type
FROM f_activity fa
WHERE 1=1
   AND action IN ('continued') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T15:51:57Z' AND TIMESTAMP '2017-01-31T15:51:57Z'
ORDER BY DATETIME desc
LIMIT 1 OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
Constructor
Set Activity Row
Append Activity Statement
Build Activity Statement
Validate Activity Row
Validate Model
Validation Object: 
{ id: '25324eaf-80f2-4c87-b696-bb66aa2ee028',
  datetime: '2017-01-06T09:06:54.000Z',
  actor: 'rama@damunaste.org',
  actor_type: 'customer',
  action: 'continued',
  acted_upon: 'rama@damunaste.org',
  acted_upon_type: 'notificationread',
  associated_with: '',
  associated_with_type: '' }
Validation Model: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/endpoints/graph/responses/analytics/activity/activity.json
Validate Function
Load References Recursive, [0]
Looking for references in /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/endpoints/graph/responses/analytics/activity/activity.json
Found 0 reference(s).
Issue Validation Success.
Model is valid.
Model Validated
Acquire Resources
Get Actor
Get
Get Entity
Set Parameter Validation
Merge
Get Values
Is Object
Is Object
Is Object
Set Parameter Definition
Merge
Get Values
Is Object
Is Object
Is Object
Set Indexing Entities
Set Abridged Entity Map
Map
Is Object
Get Keys
Is Object
Set Primary Key
Set Names
Set Environment Table Name
Build Table Key
Build Table Name
Set Table Name
Build Table Key
Using local dynamodb.
Get
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: customer/read/*
Permissions: 
{ allow: [ 'analytics/getActivity' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Get Acted Upon
Get
Get Entity
Set Parameter Validation
Merge
Get Values
Is Object
Is Object
Is Object
Set Parameter Definition
Merge
Get Values
Is Object
Is Object
Is Object
Set Indexing Entities
Set Abridged Entity Map
Map
Is Object
Get Keys
Is Object
Set Primary Key
Set Names
Set Environment Table Name
Build Table Key
Build Table Name
Set Table Name
Build Table Key
Get
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: notificationread/read/*
Permissions: 
{ allow: [ 'analytics/getActivity' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Get Associated With
Get
Catch Permissions
Permissions
false
Action
read
Throw Permissions Error
Catch Permissions
Permissions
false
Action
read
Throw Permissions Error
Handle Errors
Handle Errors
{ id: 'rama@damunaste.org', type: 'customer' }
Unable to identify actor.
{ id: 'rama@damunaste.org', type: 'notificationread' }
Unable to identify acted_upon.
Set English Template
Build Object
      ✓ random input (1514ms)
    activity_by_identifier
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getActivityByIdentifier
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getActivityByIdentifier/*
Permissions: 
{ allow: [ 'analytics/getActivityByIdentifier' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Activity By Identifier
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  actor: [ 'rama@damunaste.org' ],
  actor_type: [ 'customer' ],
  acted_upon: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  acted_upon_type: [ 'notificationread' ],
  associated_with: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  associated_with_type: [ 'customer' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'action', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
activity_by_identifier query parameters
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  actor: [ 'rama@damunaste.org' ],
  actor_type: [ 'customer' ],
  acted_upon: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  acted_upon_type: [ 'notificationread' ],
  associated_with: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  associated_with_type: [ 'customer' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/activity_by_identifier/parameter_validation.json
{ start: '2017-01-01T15:51:57Z',
  end: '2017-01-31T15:51:57Z',
  actor: [ 'rama@damunaste.org' ],
  actor_type: [ 'customer' ],
  acted_upon: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  acted_upon_type: [ 'notificationread' ],
  associated_with: [ '3ce67d29-a6b3-493f-93cc-68377b4eaae0' ],
  associated_with_type: [ 'customer' ],
  order: 'desc',
  offset: 0,
  limit: 1,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/ActivityByFacetParameterValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' },
     DeviceToken: 
      { type: 'string',
        pattern: '^[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}\\s[a-fA-F0-9]{8}$' },
     OptionalUUIDv4: 
      { anyOf: 
         [ { type: 'string', enum: [ '' ] },
           { '$ref': '#/definitions/UUIDv4' } ] },
     SixDynamoIdentifier: 
      { anyOf: 
         [ { '$ref': '#/definitions/UUIDv4' },
           { '$ref': '#/definitions/DeviceToken' },
           { type: 'string', format: 'email' },
           { type: 'string', enum: [ '*', 'system' ] } ] },
     OptionalSixDynamoIdentifier: 
      { anyOf: 
         [ { type: 'string', enum: [ '' ] },
           { '$ref': '#/definitions/SixDynamoIdentifier' } ] },
     SixActivityActorTypes: { type: 'string', enum: [ 'customer', 'user', 'system' ] },
     SixEntityTypes: 
      { type: 'string',
        enum: 
         [ 'accesskey',
           'account',
           'affiliate',
           'campaign',
           'creditcard',
           'customer',
           'customernote',
           'emailtemplate',
           'fulfillmentprovider',
           'loadbalancer',
           'merchantprovider',
           'notification',
           'notificationread',
           'notificationsetting',
           'product',
           'productschedule',
           'rebill',
           'role',
           'session',
           'shippingreceipt',
           'smtpprovider',
           'tracker',
           'transaction',
           'user',
           'useracl',
           'userdevicetoken',
           'usersetting',
           'usersigningstring' ] },
     SixIdentifierArray: 
      { type: 'array',
        items: { '$ref': '#/definitions/SixDynamoIdentifier' },
        minItems: 1 },
     SixEntityTypesArray: 
      { type: 'array',
        items: 
         { anyOf: 
            [ { '$ref': '#/definitions/SixEntityTypes' },
              { type: 'string', enum: [ '*', 'system' ] } ] },
        minItems: 1 } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     actor: { '$ref': '#/definitions/SixIdentifierArray' },
     actor_type: { '$ref': '#/definitions/SixEntityTypesArray' },
     acted_upon: { '$ref': '#/definitions/SixIdentifierArray' },
     acted_upon_type: { '$ref': '#/definitions/SixEntityTypesArray' },
     associated_with: { '$ref': '#/definitions/SixIdentifierArray' },
     associated_with_type: { '$ref': '#/definitions/SixEntityTypesArray' },
     account: 
      { anyOf: 
         [ { '$ref': '#/definitions/OptionalSixDynamoIdentifier' },
           { type: 'array',
             items: { '$ref': '#/definitions/OptionalSixDynamoIdentifier' } } ] },
     action: { type: 'string' } },
  required: 
   [ 'start',
     'end',
     'actor',
     'actor_type',
     'acted_upon',
     'acted_upon_type',
     'associated_with',
     'associated_with_type' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/activity_by_identifier/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  fa.id,
  fa.datetime,
  coalesce(fa.actor,'') AS actor,
  coalesce(fa.actor_type,'') AS actor_type,
  coalesce(fa.action,'') AS action,
  coalesce(fa.acted_upon,'') AS acted_upon,
  coalesce(fa.acted_upon_type,'') AS acted_upon_type,
  coalesce(fa.associated_with,'') AS associated_with,
  coalesce(fa.associated_with_type,'') AS associated_with_type
FROM f_activity fa
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND ((actor IN ('rama@damunaste.org') AND actor_type IN ('customer')) OR (acted_upon IN ('3ce67d29-a6b3-493f-93cc-68377b4eaae0') AND acted_upon_type IN ('notificationread')) OR (associated_with IN ('3ce67d29-a6b3-493f-93cc-68377b4eaae0') AND associated_with_type IN ('customer')))
  AND datetime BETWEEN TIMESTAMP '2017-01-01T15:51:57Z' AND TIMESTAMP '2017-01-31T15:51:57Z'
ORDER BY DATETIME desc
LIMIT 1 OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { id: '25324eaf-80f2-4c87-b696-bb66aa2ee028',
    datetime: '2017-01-06T09:06:54.000Z',
    actor: 'rama@damunaste.org',
    actor_type: 'customer',
    action: 'continued',
    acted_upon: 'rama@damunaste.org',
    acted_upon_type: 'notificationread',
    associated_with: '',
    associated_with_type: '' } ]
Constructor
Set Activity Row
Append Activity Statement
Build Activity Statement
Validate Activity Row
Validate Model
Validation Object: 
{ id: '25324eaf-80f2-4c87-b696-bb66aa2ee028',
  datetime: '2017-01-06T09:06:54.000Z',
  actor: 'rama@damunaste.org',
  actor_type: 'customer',
  action: 'continued',
  acted_upon: 'rama@damunaste.org',
  acted_upon_type: 'notificationread',
  associated_with: '',
  associated_with_type: '' }
Validation Model: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/endpoints/graph/responses/analytics/activity/activity.json
Validate Function
Load References Recursive, [0]
Looking for references in /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/endpoints/graph/responses/analytics/activity/activity.json
Found 0 reference(s).
Issue Validation Success.
Model is valid.
Model Validated
Acquire Resources
Get Actor
Get
Get Entity
Set Parameter Validation
Merge
Get Values
Is Object
Is Object
Is Object
Set Parameter Definition
Merge
Get Values
Is Object
Is Object
Is Object
Set Indexing Entities
Set Abridged Entity Map
Map
Is Object
Get Keys
Is Object
Set Primary Key
Set Names
Set Environment Table Name
Build Table Key
Build Table Name
Set Table Name
Build Table Key
Get
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: customer/read/*
Permissions: 
{ allow: [ 'analytics/getActivityByIdentifier' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Get Acted Upon
Get
Get Entity
Set Parameter Validation
Merge
Get Values
Is Object
Is Object
Is Object
Set Parameter Definition
Merge
Get Values
Is Object
Is Object
Is Object
Set Indexing Entities
Set Abridged Entity Map
Map
Is Object
Get Keys
Is Object
Set Primary Key
Set Names
Set Environment Table Name
Build Table Key
Build Table Name
Set Table Name
Build Table Key
Get
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: notificationread/read/*
Permissions: 
{ allow: [ 'analytics/getActivityByIdentifier' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Get Associated With
Get
Catch Permissions
Permissions
false
Action
read
Throw Permissions Error
Catch Permissions
Permissions
false
Action
read
Throw Permissions Error
Handle Errors
Handle Errors
{ id: 'rama@damunaste.org', type: 'customer' }
Unable to identify actor.
{ id: 'rama@damunaste.org', type: 'notificationread' }
Unable to identify acted_upon.
Set English Template
Build Object
      ✓ random input (500ms)
    aggregation_event_type_count
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getEventSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getEventSummary/*
Permissions: 
{ allow: [ 'analytics/getEventSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Event Summary
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
aggregation_event_type_count query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/aggregation_event_type_count/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationEventTypeInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     session: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'click', 'order', 'upsell', 'lead', 'confirm' ] } } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/aggregation_event_type_count/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT
  rt.event_type,
  COALESCE(COUNT(ft.type),0) AS event_count,
  DATE_TRUNC('day',rt.rt_datetime) AS day
FROM
  (
    SELECT
      *
    FROM
      f_events
    WHERE 1=1
       AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
      AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
  ) ft
  RIGHT JOIN
  (
    SELECT
      event_type,
      DATE_TRUNC('day',datetime) rt_datetime
    FROM
      d_datetime,
      d_event_type
    GROUP BY
      event_type,
      DATE_TRUNC('day',datetime)
  ) rt
  ON
    (ft.type = rt.event_type AND DATE_TRUNC ('day',ft.datetime) = rt_datetime)
WHERE
  rt.rt_datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
GROUP BY
  rt.event_type,
  rt_datetime
ORDER BY
  day,
  event_type;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
Observation Count: 2
      ✓ random input (1079ms)
    aggregation_processor_amount
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Get Object
sixcrm-local-configuration-master
config.json
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Summary
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
aggregation_processor_amount query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/aggregation_processor_amount/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/aggregation_processor_amount/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT
  rt.processor_result,
  COALESCE(SUM(amount),0) AS sum_amount,
  COALESCE(COUNT(ft.id),0) AS transaction_count,
  DATE_TRUNC('day',rt.rt_datetime) AS day
FROM
  (
    SELECT
      *
    FROM
      f_transactions
    WHERE 1=1
       AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
      AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
  ) ft
  RIGHT JOIN
  (
    SELECT
      processor_result,
      DATE_TRUNC('day',datetime) rt_datetime
    FROM
      d_datetime,
      d_processor_result
    GROUP BY
      processor_result,
      DATE_TRUNC('day',datetime)
  ) rt
  ON
    (ft.processor_result = rt.processor_result AND DATE_TRUNC ('day',ft.datetime) = rt_datetime)
WHERE
  rt.rt_datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
GROUP BY
  rt.processor_result,
  rt_datetime
ORDER BY
  day,
  processor_result

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { processor_result: 'decline',
    sum_amount: '0',
    transaction_count: '0',
    day: '2016-12-31T23:00:00.000Z' },
  { processor_result: 'error',
    sum_amount: '0',
    transaction_count: '0',
    day: '2016-12-31T23:00:00.000Z' },
  { processor_result: 'success',
    sum_amount: '0',
    transaction_count: '0',
    day: '2016-12-31T23:00:00.000Z' },
  { processor_result: 'decline',
    sum_amount: '0',
    transaction_count: '0',
    day: '2017-01-01T23:00:00.000Z' },
  { processor_result: 'error',
    sum_amount: '0',
    transaction_count: '0',
    day: '2017-01-01T23:00:00.000Z' },
  { processor_result: 'success',
    sum_amount: '0',
    transaction_count: '0',
    day: '2017-01-01T23:00:00.000Z' } ]
      ✓ random input (987ms)
    campaign_delta
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
AWS Callback
Propagate Cache
Propagate To Native Cache
Evaluate Status
Set Status
Configuration status: ready
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getCampaignDelta
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getCampaignDelta/*
Permissions: 
{ allow: [ 'analytics/getCampaignDelta' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Campaign Delta
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
campaign_delta query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/campaign_delta/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/CampaignDeltaInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true } },
  required: [ 'start', 'end', 'limit' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/campaign_delta/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  campaign,
  percent_change_amount,
  percent_change_count
FROM
    (SELECT
       campaign,
       ((greatest(sum_amount_main, 1) - greatest(sum_amount_prior, 1))*1.0 / greatest(sum_amount_prior, 1)) *
       100.0 AS percent_change_amount,
       ((greatest(transaction_count_main, 1) - greatest(transaction_count_prior, 1))*1.0 / greatest(transaction_count_prior, 1)) *
       100.0 AS percent_change_count
     FROM
       (SELECT
          campaign,
          SUM(
              CASE WHEN datetime >= TIMESTAMP '2017-01-01T00:00:00.000Z'
                THEN amount
              ELSE 0
              END
          )        AS sum_amount_main,
          SUM(CASE WHEN datetime >= TIMESTAMP '2017-01-01T00:00:00.000Z'
            THEN 1
              ELSE 0
              END) AS transaction_count_main,
          SUM(CASE WHEN datetime < TIMESTAMP '2017-01-01T00:00:00.000Z'
            THEN amount
              ELSE 0
              END) AS sum_amount_prior,
          SUM(CASE WHEN datetime < TIMESTAMP '2017-01-01T00:00:00.000Z'
            THEN 1
              ELSE 0
              END) AS transaction_count_prior
        FROM f_transactions
        WHERE 1 = 1
               AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
              AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' - (TIMESTAMP '2017-01-13T00:00:00.000Z' - TIMESTAMP '2017-01-01T00:00:00.000Z') AND TIMESTAMP '2017-01-13T00:00:00.000Z'
        GROUP BY campaign) cd
    ) cd
     ORDER BY abs(percent_change_count) DESC, percent_change_count, percent_change_amount
LIMIT 10;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { campaign: '70a6689a-5814-438b-b9fd-dd484d0812f9',
    percent_change_amount: '13899.00000000000000000',
    percent_change_count: '0.000000000000000000000' } ]
      ✓ random input (486ms)
    campaigns_by_amount
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getCampaignsByAmount
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getCampaignsByAmount/*
Permissions: 
{ allow: [ 'analytics/getCampaignsByAmount' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Campaigns By Amount
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
campaigns_by_amount query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/campaigns_by_amount/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'desc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/CampaignsByAmountParameterValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] },
        limit: 
         { type: [ 'integer' ],
           minimum: 0,
           maximum: 100,
           exclusiveMaximum: false,
           exclusiveMinimum: true } } },
  required: [ 'start', 'end', 'limit' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/campaigns_by_amount/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT *
FROM
  (SELECT
     campaign,
     coalesce(sum(amount), 0) AS campaign_amount
   FROM f_transactions
   WHERE 1 = 1
          AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
         AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
   GROUP BY campaign) cba
ORDER BY campaign_amount desc
LIMIT 10;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { campaign: '70a6689a-5814-438b-b9fd-dd484d0812f9',
    campaign_amount: '139.99' } ]
{ campaigns: 
   [ { campaign: '70a6689a-5814-438b-b9fd-dd484d0812f9',
       amount: '139.99' } ] }
      ✓ random input (438ms)
    event_funnel
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getEventFunnel
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getEventFunnel/*
Permissions: 
{ allow: [ 'analytics/getEventFunnel' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Event Funnel
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
event_funnel query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/event_funnel/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/event_funnel/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(sum(count_click), 0) count_click,
  coalesce(sum(count_lead), 0) count_lead,
  coalesce(sum(count_order), 0) count_order,
  coalesce(sum(count_confirm), 0) count_confirm,
  coalesce(sum(m_upsell), 0) count_upsell
FROM (
  SELECT
    sum(
        CASE WHEN TYPE = 'click'
          THEN 1
        ELSE 0
        END
    )        count_click,
    sum(
        CASE WHEN TYPE = 'lead'
          THEN 1
        ELSE 0
        END
    )        count_lead,
    sum(
        CASE WHEN TYPE = 'order'
          THEN 1
        ELSE 0
        END
    )        count_order,
    sum(
        CASE WHEN TYPE = 'confirm'
          THEN 1
        ELSE 0
        END
    )        count_confirm,
    max(CASE WHEN TYPE = 'upsell'
      THEN 1
        ELSE 0
        END) m_upsell
  FROM
    f_events
  WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND   datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  GROUP BY SESSION
) ef;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (425ms)
    events
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getEvents
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getEvents/*
Permissions: 
{ allow: [ 'analytics/getEvents' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Events
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
events query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/events/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     session: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'click', 'order', 'lead', 'confirm', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/events/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  fe.session,
  fe.type,
  fe.datetime,
  fe.account,
  fe.campaign,
  fe.product_schedule,
  fe.affiliate,
  fe.subaffiliate_1,
  fe.subaffiliate_2,
  fe.subaffiliate_3,
  fe.subaffiliate_4,
  fe.subaffiliate_5
FROM
  f_events fe
WHERE 1=1
 AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
ORDER BY DATETIME asc
LIMIT 10 OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { session: '99999999-999e-44aa-999e-aaa9a99a9999',
    type: 'lead',
    datetime: '2016-12-31T23:00:00.000Z',
    account: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    campaign: '99999999-999e-44aa-999e-aaa9a99a9999',
    product_schedule: '99999999-999e-44aa-999e-aaa9a99a9999',
    affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_1: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_2: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_3: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_4: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_5: '99999999-999e-44aa-999e-aaa9a99a9999' },
  { session: '99999999-999e-44aa-999e-aaa9a99a9999',
    type: 'lead',
    datetime: '2017-01-01T23:00:00.000Z',
    account: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    campaign: '99999999-999e-44aa-999e-aaa9a99a9999',
    product_schedule: '99999999-999e-44aa-999e-aaa9a99a9999',
    affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_1: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_2: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_3: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_4: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_5: '99999999-999e-44aa-999e-aaa9a99a9999' } ]
      ✓ random input (479ms)
    events_by_facet
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getEventsByFacet
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getEventsByFacet/*
Permissions: 
{ allow: [ 'analytics/getEventsByFacet' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Events By Facet
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
events_by_facet query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/events_by_facet/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/EventsByAffiliate',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     session: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: false },
     facet: 
      { type: 'string',
        enum: 
         [ 'session',
           'type',
           'account',
           'campaign',
           'product_schedule',
           'affiliate',
           'subaffiliate_1',
           'subaffiliate_2',
           'subaffiliate_3',
           'subaffiliate_4',
           'subaffiliate_5' ] } },
  required: [ 'start', 'end', 'order', 'limit', 'facet' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/events_by_facet/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT
  affiliate,
  events_count,
  SUM(CASE WHEN R_ID IN (10+1 + 0,0) THEN all_events_count ELSE 0 END)
  OVER () AS all_events_count
FROM
  (SELECT
     R_ID,
     affiliate,
     events_count,
     all_events_count
   FROM
     (SELECT R_ID,
        CASE WHEN R_ID = 10+1 + 0
          THEN 'all-other'
        ELSE affiliate END           AS affiliate,
        CASE WHEN R_ID = 10+1 + 0
          THEN all_events_count - r_sum_count
        ELSE events_count END  AS events_count,
        all_events_count
      FROM
        (
          SELECT
            affiliate,
            events_count,
            all_events_count,
            sum(events_count)
            OVER (
              ORDER BY events_count asc
              ROWS BETWEEN 10 PRECEDING AND 0 FOLLOWING ) r_sum_count,
            ROW_NUMBER()
            OVER (
              ORDER BY events_count asc ) AS       R_ID
          FROM
            (
              SELECT
                affiliate,
                count(*)    AS events_count,
                sum(count(*))
                OVER ( )    AS all_events_count
              FROM f_events
              WHERE 1 = 1
                    AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
                    AND affiliate IS NOT NULL
              GROUP BY affiliate
            ) sfe
          ORDER BY events_count asc
          LIMIT 10+1
          OFFSET 0
        ) sfo ) fso
   UNION ALL
     SELECT 0 AS R_ID,
       'none'      AS affiliate,
       count(*)    AS events_count,
       0           AS all_events_count
     FROM f_events
     WHERE 1 = 1
           AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
           AND affiliate IS NULL
     GROUP BY affiliate
 ) ecl
ORDER BY events_count asc

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    events_count: '2',
    all_events_count: '0' } ]
      ✓ random input (483ms)
    merchant_provider_amount
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantProviderAmount
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantProviderAmount/*
Permissions: 
{ allow: [ 'analytics/getMerchantProviderAmount' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Provider Amount
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
merchant_provider_amount query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/merchant_provider_amount/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/MerchantProviderAmount',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end', 'merchantprovider' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/merchant_provider_amount/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  mp.merchant_provider,
  mp.processor_result,
  coalesce(sum_amount, 0)        AS sum_amount,
  coalesce(transaction_count, 0) AS transaction_count
FROM
  (
   SELECT
     merchant_provider,
     dpr.processor_result
   FROM
     (
       SELECT merchant_provider AS merchant_provider
       FROM
         d_merchant_provider
       WHERE 1=1
             AND activity_flag = 'active'
             AND merchant_provider IN ('6c40761d-8919-4ad6-884d-6a46a776cfb9')
     ) ft
     CROSS JOIN d_processor_result dpr
  ) mp LEFT JOIN (
                   SELECT
                     merchant_provider,
                     processor_result,
                     SUM(amount)                 AS sum_amount,
                     COUNT(*)                    AS transaction_count
                   FROM f_transactions
                   WHERE 1=1
                       AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
                      AND merchant_provider IN ('6c40761d-8919-4ad6-884d-6a46a776cfb9')
                      AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
                   GROUP BY
                     processor_result,
                     merchant_provider
                 ) out
    ON (mp.merchant_provider = out.merchant_provider AND mp.processor_result = out.processor_result)
ORDER BY merchant_provider, processor_result;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
{ merchant_providers: [] }
      ✓ random input with mixed transaction type (1628ms)
    merchant_provider_summary
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantProviderSummaries
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantProviderSummaries/*
Permissions: 
{ allow: [ 'analytics/getMerchantProviderSummaries' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Provider Summaries
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  order: 'desc',
  offset: 0,
  limit: 50,
  order_field: 'merchant_provider',
  merchant_provider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  union: 'UNION ALL\nSELECT\n\t\'6c40761d-8919-4ad6-884d-6a46a776cfb9\'merchant_provider,\n\t0 num_transactions_today,\n\t0 num_transactions_week,\n\t0 num_transactions_month,\n\t0 amount_transactions_today,\n\t0 amount_transactions_week,\n\t0 amount_transactions_month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account',
  undefined ]
merchant_provider
[ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
merchant_provider_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  order: 'desc',
  offset: 0,
  limit: 50,
  order_field: 'merchant_provider',
  merchant_provider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  union: 'UNION ALL\nSELECT\n\t\'6c40761d-8919-4ad6-884d-6a46a776cfb9\'merchant_provider,\n\t0 num_transactions_today,\n\t0 num_transactions_week,\n\t0 num_transactions_month,\n\t0 amount_transactions_today,\n\t0 amount_transactions_week,\n\t0 amount_transactions_month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND merchant_provider IN (\'6c40761d-8919-4ad6-884d-6a46a776cfb9\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/merchant_provider_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  merchantprovider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  period: 'day',
  order: 'desc',
  offset: 0,
  limit: 50,
  order_field: 'merchant_provider',
  merchant_provider: [ '6c40761d-8919-4ad6-884d-6a46a776cfb9' ],
  union: 'UNION ALL\nSELECT\n\t\'6c40761d-8919-4ad6-884d-6a46a776cfb9\'merchant_provider,\n\t0 num_transactions_today,\n\t0 num_transactions_week,\n\t0 num_transactions_month,\n\t0 amount_transactions_today,\n\t0 amount_transactions_week,\n\t0 amount_transactions_month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND merchant_provider IN (\'6c40761d-8919-4ad6-884d-6a46a776cfb9\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     order_field: 
      { type: 'string',
        enum: 
         [ 'merchant_provider',
           'num_transactions_today',
           'num_transactions_week',
           'num_transactions_month',
           'amount_transactions_today',
           'amount_transactions_week',
           'amount_transactions_month' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: { type: [ 'integer' ], minimum: 0, exclusiveMinimum: false } },
  required: [ 'limit', 'offset', 'order', 'order_field' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/merchant_provider_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT t.merchant_provider,
       max(num_transactions_today) num_transactions_today,
       max(num_transactions_week) num_transactions_week,
       max(num_transactions_month) num_transactions_month,
       max(amount_transactions_today) amount_transactions_today,
       max(amount_transactions_week) amount_transactions_week,
       max(amount_transactions_month) amount_transactions_month
FROM
  (SELECT merchant_provider,
          SUM(CASE
                  WHEN date_trunc('day', CURRENT_TIMESTAMP) = date_trunc('day', datetime) THEN 1
                  ELSE 0
              END ) num_transactions_today,
          SUM(CASE
                  WHEN date_trunc('week', CURRENT_TIMESTAMP) = date_trunc('week', datetime) THEN 1
                  ELSE 0
              END ) num_transactions_week,
          SUM(CASE
                  WHEN date_trunc('month', CURRENT_TIMESTAMP) = date_trunc('month', datetime) THEN 1
                  ELSE 0
              END ) num_transactions_month,
          SUM(CASE
                  WHEN date_trunc('day', CURRENT_TIMESTAMP) = date_trunc('day', datetime) THEN amount
                  ELSE 0
              END ) amount_transactions_today,
          SUM(CASE
                  WHEN date_trunc('week', CURRENT_TIMESTAMP) = date_trunc('week', datetime) THEN amount
                  ELSE 0
              END ) amount_transactions_week,
          SUM(CASE
                  WHEN date_trunc('month', CURRENT_TIMESTAMP) = date_trunc('month', datetime) THEN amount
                  ELSE 0
              END ) amount_transactions_month
   FROM f_transactions
   WHERE 1=1
      AND merchant_provider IN ('6c40761d-8919-4ad6-884d-6a46a776cfb9') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN CURRENT_TIMESTAMP - interval '30 days' AND CURRENT_TIMESTAMP
   GROUP BY merchant_provider
   UNION ALL
SELECT
	'6c40761d-8919-4ad6-884d-6a46a776cfb9'merchant_provider,
	0 num_transactions_today,
	0 num_transactions_week,
	0 num_transactions_month,
	0 amount_transactions_today,
	0 amount_transactions_week,
	0 amount_transactions_month
 ) t
GROUP BY merchant_provider
ORDER BY merchant_provider desc
LIMIT 50
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
To Currency
To Currency
To Currency
      ✓ random input with mixed transaction type (1853ms)
    order_engine_queue_average_time
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (536ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ only bill queue, cannot calculate averagetime in queue as there is only one queue (491ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-04-01T00:00:00.000Z' AND TIMESTAMP '2017-05-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ only hold queue, cannot calculate averagetime in queue as there is only one queue (502ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ only pending queue, cannot calculate averagetime in queue as there is only one queue (474ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ only shipped queue, cannot calculate averagetime in queue as there is only one queue (426ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueAverageTime
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueAverageTime/*
Permissions: 
{ allow: [ 'analytics/getQueueAverageTime' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Average Time of Messages in Queue
Append Queue Name
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_average_time query parameters
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/parameter_validation.json
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_average_time/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
WITH rebills_delta AS
(SELECT
   previous_queuename AS queuename,
   datetime - lag(DATETIME)
   OVER (
     PARTITION BY id_rebill
     ORDER BY datetime ) delta_time
 FROM
   f_rebills
 WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-04-01T00:00:00.000Z' AND TIMESTAMP '2017-05-01T00:00:00.000Z')
SELECT
  queuename,
  coalesce(avg(delta_time), INTERVAL '0 second') AS average_time
FROM rebills_delta
GROUP BY queuename;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input for a state machine walk (539ms)
    order_engine_queue_pagination
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueSummary/*
Permissions: 
{ allow: [ 'analytics/getQueueSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Queue Summary
Append Queue Name
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-04-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }
bill
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-04-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
queuename
'bill'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_pagination query parameters
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-04-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND queuename IN (\'bill\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_pagination/parameter_validation.json
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-04-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND queuename IN (\'bill\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_pagination/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  DATE_TRUNC('day',DATETIME) AS datetime,
  SUM(fq.count) AS count
FROM f_queue_count fq
WHERE 1=1
  AND queuename IN ('bill') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
 AND datetime BETWEEN TIMESTAMP '2017-03-01T00:00:00.000Z' AND TIMESTAMP '2017-04-01T00:00:00.000Z'
GROUP BY DATE_TRUNC('day',DATETIME)
ORDER BY DATE_TRUNC('day',DATETIME)
asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (518ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueSummary/*
Permissions: 
{ allow: [ 'analytics/getQueueSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Queue Summary
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }
bill
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
queuename
'bill'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_pagination query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND queuename IN (\'bill\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_pagination/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  queuename: '\'bill\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND queuename IN (\'bill\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_pagination/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  DATE_TRUNC('day',DATETIME) AS datetime,
  SUM(fq.count) AS count
FROM f_queue_count fq
WHERE 1=1
  AND queuename IN ('bill') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
 AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
GROUP BY DATE_TRUNC('day',DATETIME)
ORDER BY DATE_TRUNC('day',DATETIME)
asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (446ms)
    order_engine_queue_rate
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueRates
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueRates/*
Permissions: 
{ allow: [ 'analytics/getQueueRates' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Queue Failure
Append Queue Name
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_rate query parameters
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_rate/parameter_validation.json
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'current_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     'previous_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_rate/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  queuename,
  num_of_failed_rebills / num_of_rebills_from_queue AS failure_rate,
  num_of_error_rebills / num_of_rebills_from_queue AS error_rate,
  num_of_success_rebills / num_of_rebills_from_queue AS success_rate,
  num_of_expired_rebills / num_of_rebills_from_queue AS expired_rate
FROM
  (SELECT
     previous_queuename AS queuename,
     count(*)              num_of_rebills_from_queue,
     sum(
         CASE
         WHEN current_queuename LIKE 'fail%' or current_queuename LIKE 'pending%'
           THEN 1
         ELSE 0
         END
     )                     num_of_failed_rebills,
     sum(
         CASE
         WHEN current_queuename LIKE 'error%'
           THEN 1
         ELSE 0
         END
     )                     num_of_error_rebills,
     sum(
         CASE
         WHEN current_queuename NOT LIKE 'error%' and current_queuename NOT LIKE 'fail%' and current_queuename NOT LIKE 'pending%'
           THEN 1
         ELSE 0
         END
     )                     num_of_success_rebills,
     sum(
         CASE
         WHEN m_datetime = datetime and datetime < CURRENT_DATE + interval '14 days'
           THEN 1
         ELSE 0
         END
     )                     num_of_expired_rebills
     FROM
(
  SELECT fr.*,
         max(datetime) over (partition by id_rebill) as m_datetime
  FROM f_rebills fr
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-04-01T00:00:00.000Z' AND TIMESTAMP '2017-05-01T00:00:00.000Z'
  AND previous_queuename NOT LIKE 'fail%' and previous_queuename != 'pending' ) rebill_sub_1
GROUP BY previous_queuename) rebill_sub_2;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (560ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getQueueRates
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getQueueRates/*
Permissions: 
{ allow: [ 'analytics/getQueueRates' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Queue Failure
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/queue_rate query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_rate/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'current_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     'previous_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/queue_rate/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  queuename,
  num_of_failed_rebills / num_of_rebills_from_queue AS failure_rate,
  num_of_error_rebills / num_of_rebills_from_queue AS error_rate,
  num_of_success_rebills / num_of_rebills_from_queue AS success_rate,
  num_of_expired_rebills / num_of_rebills_from_queue AS expired_rate
FROM
  (SELECT
     previous_queuename AS queuename,
     count(*)              num_of_rebills_from_queue,
     sum(
         CASE
         WHEN current_queuename LIKE 'fail%' or current_queuename LIKE 'pending%'
           THEN 1
         ELSE 0
         END
     )                     num_of_failed_rebills,
     sum(
         CASE
         WHEN current_queuename LIKE 'error%'
           THEN 1
         ELSE 0
         END
     )                     num_of_error_rebills,
     sum(
         CASE
         WHEN current_queuename NOT LIKE 'error%' and current_queuename NOT LIKE 'fail%' and current_queuename NOT LIKE 'pending%'
           THEN 1
         ELSE 0
         END
     )                     num_of_success_rebills,
     sum(
         CASE
         WHEN m_datetime = datetime and datetime < CURRENT_DATE + interval '14 days'
           THEN 1
         ELSE 0
         END
     )                     num_of_expired_rebills
     FROM
(
  SELECT fr.*,
         max(datetime) over (partition by id_rebill) as m_datetime
  FROM f_rebills fr
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND previous_queuename NOT LIKE 'fail%' and previous_queuename != 'pending' ) rebill_sub_1
GROUP BY previous_queuename) rebill_sub_2;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (465ms)
    order_engine_rebill_pagination
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getRebillSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getRebillSummary/*
Permissions: 
{ allow: [ 'analytics/getRebillSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Append Queue Name
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/rebill_pagination query parameters
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/rebill_pagination/parameter_validation.json
{ start: '2017-04-01T00:00:00.000Z',
  end: '2017-05-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'current_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/rebill_pagination/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  DATE_TRUNC('day',DATETIME) AS datetime,
  COUNT(*) AS count
FROM f_rebills fq
WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
 AND datetime BETWEEN TIMESTAMP '2017-04-01T00:00:00.000Z' AND TIMESTAMP '2017-05-01T00:00:00.000Z'
GROUP BY DATE_TRUNC('day',DATETIME)
ORDER BY DATE_TRUNC('day',DATETIME)
asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (475ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getRebillSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getRebillSummary/*
Permissions: 
{ allow: [ 'analytics/getRebillSummary' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Append Queue Name
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10 }

Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'queuename', 'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
order_engine/rebill_pagination query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/rebill_pagination/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  current_queuename: '\'undefined\'',
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     'account:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'current_queuename:': 
      { type: 'array',
        enum: 
         [ 'bill',
           'hold',
           'pending',
           'shipped',
           'delivered',
           'recover',
           'failed',
           'fail_hold',
           'pending',
           'fail_shipped',
           'fail_delivered',
           'fail_recover' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/order_engine/rebill_pagination/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  DATE_TRUNC('day',DATETIME) AS datetime,
  COUNT(*) AS count
FROM f_rebills fq
WHERE 1=1
  AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
 AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
GROUP BY DATE_TRUNC('day',DATETIME)
ORDER BY DATE_TRUNC('day',DATETIME)
asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (453ms)
    report_affiliate
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: '6b6331f6-7f84-437a-9ac6-093ba301e455',
    count_click: '0',
    count_partials: '0',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '139.99',
    day: '2017-01-01T23:00:00.000Z' } ]
[ { affiliate: '6b6331f6-7f84-437a-9ac6-093ba301e455',
    count_click: '0',
    count_partials: '0',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '139.99' } ]
      ✓ random input (492ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '2',
    count_partials: '1',
    partials_percent: '0.50000000000000000000',
    decline_count: '0',
    declines_percent: '0.00000000000000000000',
    count_sales: '0',
    sales_percent: '0.00000000000000000000',
    count_upsell: '0',
    upsell_percent: '0.00000000000000000000',
    sum_upsell: '0',
    sum_amount: '1563.97',
    day: '2016-12-31T23:00:00.000Z' },
  { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '139.99',
    day: '2017-01-01T23:00:00.000Z' } ]
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '2',
    count_partials: '1',
    partials_percent: '0.50000000000000000000',
    decline_count: '0',
    declines_percent: '0.00000000000000000000',
    count_sales: '0',
    sales_percent: '0.00000000000000000000',
    count_upsell: '0',
    upsell_percent: '0.00000000000000000000',
    sum_upsell: '0',
    sum_amount: '1563.97' },
  { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '139.99' } ]
      ✓ input with clicks and partials (463ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Nothing to seed
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
[]
      ✓ random input with out of bounds query input (440ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 1
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '0',
    count_partials: '0',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '1563.97',
    day: '2016-12-31T23:00:00.000Z' } ]
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '0',
    count_partials: '0',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0',
    sum_amount: '1563.97' } ]
      ✓ input with transactions and no events (486ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 1
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
[]
      ✓ input with events and no transactions (444ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReport/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-02-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-02-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 1,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT ft.affiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
           when coalesce(fe.count_click,0) = 0 then 0
           else 1.0*decline_count / fe.count_click
         end,
       0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       ft.day AS day
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
      AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate,
          DATE_TRUNC('day',datetime) AS day
   FROM f_transactions
   WHERE 1=1
     AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-02-01T00:00:00.000Z'
   GROUP BY affiliate,
            DATE_TRUNC('day',datetime)) ft ON (fe.affiliate = ft.affiliate
                                                      AND fe.day = ft.day)
ORDER BY affiliate,day asc
LIMIT 1
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '1',
    count_partials: '0',
    partials_percent: '0.00000000000000000000',
    decline_count: '0',
    declines_percent: '0.00000000000000000000',
    count_sales: '0',
    sales_percent: '0.00000000000000000000',
    count_upsell: '2',
    upsell_percent: '2.0000000000000000',
    sum_upsell: '1563.97',
    sum_amount: '1563.97',
    day: '2016-12-31T23:00:00.000Z' } ]
[ { affiliate: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    count_click: '1',
    count_partials: '0',
    partials_percent: '0.00000000000000000000',
    decline_count: '0',
    declines_percent: '0.00000000000000000000',
    count_sales: '0',
    sales_percent: '0.00000000000000000000',
    count_upsell: '2',
    upsell_percent: '2.0000000000000000',
    sum_upsell: '1563.97',
    sum_amount: '1563.97' } ]
      ✓ input with upsell transactions and amount (503ms)
    report_affiliate_report_subaffiliates_overview
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliatesOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliatesOverview/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliatesOverview' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates Overview
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates_overview query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
WITH SUBAFFILIATES AS (SELECT subaffiliate_1 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_1 !=''
  AND subaffiliate_1 IS NOT NULL
GROUP BY subaffiliate_1
UNION ALL
SELECT subaffiliate_2 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_2 !=''
  AND subaffiliate_2 IS NOT NULL
GROUP BY subaffiliate_2
UNION ALL
SELECT subaffiliate_3 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_3 !=''
  AND subaffiliate_3 IS NOT NULL
GROUP BY subaffiliate_3
UNION ALL
SELECT subaffiliate_4 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_4 !=''
  AND subaffiliate_4 IS NOT NULL
GROUP BY subaffiliate_4
UNION ALL
SELECT subaffiliate_5 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_5 !=''
  AND subaffiliate_5 IS NOT NULL
GROUP BY subaffiliate_5
)
SELECT subaffiliate,
       sum(amount) as amount
FROM SUBAFFILIATES
GROUP BY subaffiliate;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { subaffiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    amount: '279.98' } ]
      ✓ random input (481ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliatesOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliatesOverview/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliatesOverview' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates Overview
Get Target Period Count
Period Selection
Parameters: 
2017-10-01T00:00:00.000Z
2017-11-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates_overview query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
WITH SUBAFFILIATES AS (SELECT subaffiliate_1 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND subaffiliate_1 !=''
  AND subaffiliate_1 IS NOT NULL
GROUP BY subaffiliate_1
UNION ALL
SELECT subaffiliate_2 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND subaffiliate_2 !=''
  AND subaffiliate_2 IS NOT NULL
GROUP BY subaffiliate_2
UNION ALL
SELECT subaffiliate_3 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND subaffiliate_3 !=''
  AND subaffiliate_3 IS NOT NULL
GROUP BY subaffiliate_3
UNION ALL
SELECT subaffiliate_4 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND subaffiliate_4 !=''
  AND subaffiliate_4 IS NOT NULL
GROUP BY subaffiliate_4
UNION ALL
SELECT subaffiliate_5 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
  AND subaffiliate_5 !=''
  AND subaffiliate_5 IS NOT NULL
GROUP BY subaffiliate_5
)
SELECT subaffiliate,
       sum(amount) as amount
FROM SUBAFFILIATES
GROUP BY subaffiliate;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
      ✓ random input with out of bounds query input (454ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliatesOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliatesOverview/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliatesOverview' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates Overview
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates_overview query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
WITH SUBAFFILIATES AS (SELECT subaffiliate_1 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_1 !=''
  AND subaffiliate_1 IS NOT NULL
GROUP BY subaffiliate_1
UNION ALL
SELECT subaffiliate_2 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_2 !=''
  AND subaffiliate_2 IS NOT NULL
GROUP BY subaffiliate_2
UNION ALL
SELECT subaffiliate_3 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_3 !=''
  AND subaffiliate_3 IS NOT NULL
GROUP BY subaffiliate_3
UNION ALL
SELECT subaffiliate_4 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_4 !=''
  AND subaffiliate_4 IS NOT NULL
GROUP BY subaffiliate_4
UNION ALL
SELECT subaffiliate_5 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_5 !=''
  AND subaffiliate_5 IS NOT NULL
GROUP BY subaffiliate_5
)
SELECT subaffiliate,
       sum(amount) as amount
FROM SUBAFFILIATES
GROUP BY subaffiliate;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
      ✓ no subaffiliates in transactions (443ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliatesOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliatesOverview/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliatesOverview' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates Overview
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates_overview query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
WITH SUBAFFILIATES AS (SELECT subaffiliate_1 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_1 !=''
  AND subaffiliate_1 IS NOT NULL
GROUP BY subaffiliate_1
UNION ALL
SELECT subaffiliate_2 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_2 !=''
  AND subaffiliate_2 IS NOT NULL
GROUP BY subaffiliate_2
UNION ALL
SELECT subaffiliate_3 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_3 !=''
  AND subaffiliate_3 IS NOT NULL
GROUP BY subaffiliate_3
UNION ALL
SELECT subaffiliate_4 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_4 !=''
  AND subaffiliate_4 IS NOT NULL
GROUP BY subaffiliate_4
UNION ALL
SELECT subaffiliate_5 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_5 !=''
  AND subaffiliate_5 IS NOT NULL
GROUP BY subaffiliate_5
)
SELECT subaffiliate,
       sum(amount) as amount
FROM SUBAFFILIATES
GROUP BY subaffiliate;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { subaffiliate: '70a6689a-5814-438b-b9fd-dd484d0812f9',
    amount: '29.99' },
  { subaffiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    amount: '139.99' } ]
      ✓ input where the multiple affiliates is in in different subaffiliates_* columns (426ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliatesOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliatesOverview/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliatesOverview' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates Overview
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates_overview query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 5,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates_overview/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
WITH SUBAFFILIATES AS (SELECT subaffiliate_1 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_1 !=''
  AND subaffiliate_1 IS NOT NULL
GROUP BY subaffiliate_1
UNION ALL
SELECT subaffiliate_2 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_2 !=''
  AND subaffiliate_2 IS NOT NULL
GROUP BY subaffiliate_2
UNION ALL
SELECT subaffiliate_3 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_3 !=''
  AND subaffiliate_3 IS NOT NULL
GROUP BY subaffiliate_3
UNION ALL
SELECT subaffiliate_4 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_4 !=''
  AND subaffiliate_4 IS NOT NULL
GROUP BY subaffiliate_4
UNION ALL
SELECT subaffiliate_5 as subaffiliate,
       SUM(amount) AS AMOUNT
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
  AND subaffiliate_5 !=''
  AND subaffiliate_5 IS NOT NULL
GROUP BY subaffiliate_5
)
SELECT subaffiliate,
       sum(amount) as amount
FROM SUBAFFILIATES
GROUP BY subaffiliate;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { subaffiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    amount: '279.98' } ]
      ✓ input where the same affiliate is in in different subaffiliates_* columns (479ms)
    report_affiliate_subaffiliates
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliates
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliates/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliates' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-31T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
affiliate
'99999999-999e-44aa-999e-aaa9a99a9999'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order', 'affiliate' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
with EVENTS_SUB1 as (SELECT subaffiliate_1 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_1 is not null
     AND subaffiliate_1 !=''
   GROUP BY subaffiliate_1,
            DATE_TRUNC('day',datetime)),
EVENTS_SUB2 as (SELECT subaffiliate_2 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_2 is not null
     AND subaffiliate_2 !=''
   GROUP BY subaffiliate_2,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB1),
EVENTS_SUB3 as (SELECT subaffiliate_3 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_3 is not null
     AND subaffiliate_3 !=''
   GROUP BY subaffiliate_3,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB2),
EVENTS_SUB4 as (SELECT subaffiliate_4 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_4 is not null
     AND subaffiliate_4 !=''
   GROUP BY subaffiliate_4,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB3),
EVENTS_SUB5 as (SELECT subaffiliate_5 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_5 is not null
     AND subaffiliate_5 !=''
   GROUP BY subaffiliate_5,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB4),
TRANSACTIONS_SUB1 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_1
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_1 is not null
     AND subaffiliate_1 !=''
   GROUP BY subaffiliate_1,
            DATE_TRUNC('day',datetime)),
TRANSACTIONS_SUB2 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_2
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_2 is not null
     AND subaffiliate_2 !=''
   GROUP BY subaffiliate_2,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB1),
TRANSACTIONS_SUB3 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_3
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_3 is not null
     AND subaffiliate_3 !=''
   GROUP BY subaffiliate_3,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB2),
TRANSACTIONS_SUB4 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_4
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_4 is not null
     AND subaffiliate_4 !=''
   GROUP BY subaffiliate_4,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB3),
TRANSACTIONS_SUB5 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_5 as subaffiliate
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
     AND subaffiliate_5 is not null
     AND subaffiliate_5 !=''
   GROUP BY subaffiliate_5,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB4)
SELECT ft.subaffiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
            when coalesce(decline_count,0) = 0 then 0
            else 1.0*decline_count / fe.count_click
            end
       ,0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_sales,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_upsell,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       fe.day AS day
FROM EVENTS_SUB5 fe RIGHT OUTER JOIN TRANSACTIONS_SUB5 ft
  ON (fe.subaffiliate = ft.subaffiliate AND fe.day = ft.day)
ORDER BY day asc
LIMIT 2
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { subaffiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0.00',
    sum_amount: '0.00',
    day: '2016-12-31T23:00:00.000Z' },
  { subaffiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0.00',
    sum_amount: '0.00',
    day: '2016-12-31T23:00:00.000Z' } ]
[ { affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0.00',
    sum_amount: '0.00' },
  { affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    count_click: '0',
    count_partials: '1',
    partials_percent: '0',
    decline_count: '0',
    declines_percent: '0',
    count_sales: '0',
    sales_percent: '0',
    count_upsell: '0',
    upsell_percent: '0',
    sum_upsell: '0.00',
    sum_amount: '0.00' } ]
      ✓ random input (501ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSubaffiliates
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSubaffiliates/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSubaffiliates' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Subaffiliates
Get Target Period Count
Period Selection
Parameters: 
2017-10-01T00:00:00.000Z
2017-11-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
affiliate
'99999999-999e-44aa-999e-aaa9a99a9999'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_subaffiliates query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period', 'offset', 'limit', 'order', 'affiliate' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_subaffiliates/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
with EVENTS_SUB1 as (SELECT subaffiliate_1 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_1 is not null
     AND subaffiliate_1 !=''
   GROUP BY subaffiliate_1,
            DATE_TRUNC('day',datetime)),
EVENTS_SUB2 as (SELECT subaffiliate_2 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_2 is not null
     AND subaffiliate_2 !=''
   GROUP BY subaffiliate_2,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB1),
EVENTS_SUB3 as (SELECT subaffiliate_3 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_3 is not null
     AND subaffiliate_3 !=''
   GROUP BY subaffiliate_3,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB2),
EVENTS_SUB4 as (SELECT subaffiliate_4 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_4 is not null
     AND subaffiliate_4 !=''
   GROUP BY subaffiliate_4,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB3),
EVENTS_SUB5 as (SELECT subaffiliate_5 as subaffiliate,
          sum(CASE
                    WHEN type='click' THEN 1
                    ELSE 0
                END) count_click,
          sum(CASE
                    WHEN type='lead' THEN 1
                    ELSE 0
                END) count_partials,
          sum(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE 0
                END) count_upsell,
          sum(CASE
                    WHEN type ='order' THEN 1
                    ELSE 0
                END) count_sales,
          DATE_TRUNC('day',datetime) AS day
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_5 is not null
     AND subaffiliate_5 !=''
   GROUP BY subaffiliate_5,
            DATE_TRUNC('day',datetime)
   UNION ALL
   SELECT * FROM EVENTS_SUB4),
TRANSACTIONS_SUB1 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_1
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_1 is not null
     AND subaffiliate_1 !=''
   GROUP BY subaffiliate_1,
            DATE_TRUNC('day',datetime)),
TRANSACTIONS_SUB2 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_2
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_2 is not null
     AND subaffiliate_2 !=''
   GROUP BY subaffiliate_2,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB1),
TRANSACTIONS_SUB3 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_3
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_3 is not null
     AND subaffiliate_3 !=''
   GROUP BY subaffiliate_3,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB2),
TRANSACTIONS_SUB4 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_4
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_4 is not null
     AND subaffiliate_4 !=''
   GROUP BY subaffiliate_4,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB3),
TRANSACTIONS_SUB5 AS (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          sum(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE 0
                END) decline_count,
          DATE_TRUNC('day',datetime) AS day,
          subaffiliate_5 as subaffiliate
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
     AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
     AND subaffiliate_5 is not null
     AND subaffiliate_5 !=''
   GROUP BY subaffiliate_5,
            DATE_TRUNC('day',datetime)
  UNION ALL
  SELECT * FROM TRANSACTIONS_SUB4)
SELECT ft.subaffiliate,
       coalesce(fe.count_click,0) AS count_click,
       coalesce(fe.count_partials,0) AS count_partials,
       case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
       end AS partials_percent,
       coalesce(decline_count,0) AS decline_count,
       coalesce(
         case
            when coalesce(decline_count,0) = 0 then 0
            else 1.0*decline_count / fe.count_click
            end
       ,0) AS declines_percent,
       coalesce(fe.count_sales,0) AS count_sales,
       case
          when coalesce(fe.count_sales,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
       end AS sales_percent,
       coalesce(fe.count_upsell,0) AS count_upsell ,
       case
          when coalesce(fe.count_upsell,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
       end AS upsell_percent,
       sum_upsell,
       sum_amount,
       fe.day AS day
FROM EVENTS_SUB5 fe RIGHT OUTER JOIN TRANSACTIONS_SUB5 ft
  ON (fe.subaffiliate = ft.subaffiliate AND fe.day = ft.day)
ORDER BY day asc
LIMIT 2
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
[]
      ✓ random input with out of bounds query input (547ms)
    report_affiliate_summary
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSummary/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Summary
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-31T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
affiliate
'99999999-999e-44aa-999e-aaa9a99a9999'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT coalesce(SUM(fe.count_click),0) AS count_click,
       coalesce(SUM(fe.count_partials),0) AS count_partials,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
         end
       ),0) AS partials_percent,
       coalesce(SUM(coalesce(decline_count,0)),0) AS decline_count,
       coalesce(SUM(
         coalesce(
           case
            when fe.count_click = 0 then 0
            else 1.0*decline_count / fe.count_click
           end
       ,0)),0) AS declines_percent,
       coalesce(SUM(fe.count_sales),0) AS count_sales,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
         end
       ),0) AS sales_percent,
       coalesce(SUM(fe.count_upsell),0) AS count_upsell,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
         end
       ),0) AS upsell_percent,
       coalesce(SUM(sum_upsell),0) AS sum_upsell,
       coalesce(SUM(sum_amount),0) AS sum_amount
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
   AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
   GROUP BY affiliate) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
   AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
   GROUP BY affiliate) ft ON (fe.affiliate = ft.affiliate)

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (486ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getAffiliateReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getAffiliateReportSummary/*
Permissions: 
{ allow: [ 'analytics/getAffiliateReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Affiliate Report Summary
Get Target Period Count
Period Selection
Parameters: 
2017-10-01T00:00:00.000Z
2017-11-01T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
affiliate
'99999999-999e-44aa-999e-aaa9a99a9999'
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/affiliate/affiliate_report_summary query parameters
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_summary/parameter_validation.json
{ start: '2017-10-01T00:00:00.000Z',
  end: '2017-11-01T00:00:00.000Z',
  affiliate: '\'99999999-999e-44aa-999e-aaa9a99a9999\'',
  order: 'asc',
  offset: 0,
  limit: 2,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND affiliate IN (\'99999999-999e-44aa-999e-aaa9a99a9999\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     datetime: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     order: { type: 'string', enum: [ 'desc', 'asc' ] },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/affiliate/affiliate_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT coalesce(SUM(fe.count_click),0) AS count_click,
       coalesce(SUM(fe.count_partials),0) AS count_partials,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_partials / fe.count_click
         end
       ),0) AS partials_percent,
       coalesce(SUM(coalesce(decline_count,0)),0) AS decline_count,
       coalesce(SUM(
         coalesce(
           case
            when fe.count_click = 0 then 0
            else 1.0*decline_count / fe.count_click
           end
       ,0)),0) AS declines_percent,
       coalesce(SUM(fe.count_sales),0) AS count_sales,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_sales / fe.count_click
         end
       ),0) AS sales_percent,
       coalesce(SUM(fe.count_upsell),0) AS count_upsell,
       coalesce(SUM(
         case
          when coalesce(fe.count_click,0) = 0 then 0
          else 1.0*fe.count_upsell / fe.count_click
         end
       ),0) AS upsell_percent,
       coalesce(SUM(sum_upsell),0) AS sum_upsell,
       coalesce(SUM(sum_amount),0) AS sum_amount
FROM
  (SELECT affiliate,
          count(CASE
                    WHEN type='click' THEN 1
                    ELSE NULL
                END) count_click,
          count(CASE
                    WHEN type='lead' THEN 1
                    ELSE NULL
                END) count_partials,
          count(CASE
                    WHEN type LIKE 'upsell%' THEN 1
                    ELSE NULL
                END) count_upsell,
          count(CASE
                    WHEN type ='order' THEN 1
                    ELSE NULL
                END) count_sales
   FROM f_events fe
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
   AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
   GROUP BY affiliate) fe
RIGHT OUTER JOIN
  (SELECT sum(amount) sum_amount,
          sum(CASE
                  WHEN subtype LIKE 'upsell%' THEN amount
                  ELSE 0
              END) sum_upsell,
          count(CASE
                    WHEN subtype IN ('order','main')
                         AND processor_result ='decline' THEN 1
                    ELSE NULL
                END) decline_count,
          affiliate
   FROM f_transactions
   WHERE 1=1
     AND affiliate IN ('99999999-999e-44aa-999e-aaa9a99a9999') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
   AND datetime BETWEEN TIMESTAMP '2017-10-01T00:00:00.000Z' AND TIMESTAMP '2017-11-01T00:00:00.000Z'
   GROUP BY affiliate) ft ON (fe.affiliate = ft.affiliate)

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (466ms)
    report_merchantprovider
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantReport/*
Permissions: 
{ allow: [ 'analytics/getMerchantReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/merchantprovider/merchantprovider_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  merchant_provider,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS net_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN 1
        ELSE 0
      END
  ),0) AS mtd_sales_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN amount
        ELSE 0
      END
  ),0) AS mtd_gross_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
GROUP BY merchant_provider
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
    sale_count: '1',
    sale_gross_revenue: '179.99',
    refund_expenses: '200.00',
    refund_count: '1',
    net_revenue: '-20.01',
    mtd_sales_count: '0',
    mtd_gross_count: '0' } ]
{ merchants: 
   [ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
       sale_count: '1',
       sale_gross_revenue: '179.99',
       refund_expenses: '200.00',
       refund_count: '1',
       net_revenue: '-20.01',
       mtd_sales_count: '0',
       mtd_gross_count: '0' } ],
  pagination: { order: 'asc', limit: 10, offset: 0, count: 1 } }
      ✓ random input with mixed transaction type (518ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantReport/*
Permissions: 
{ allow: [ 'analytics/getMerchantReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Report
Get Target Period Count
Period Selection
Parameters: 
2017-03-01T00:00:00.000Z
2017-03-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-03-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/merchantprovider/merchantprovider_report query parameters
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-03-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/parameter_validation.json
{ start: '2017-03-01T00:00:00.000Z',
  end: '2017-03-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  merchant_provider,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS net_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN 1
        ELSE 0
      END
  ),0) AS mtd_sales_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN amount
        ELSE 0
      END
  ),0) AS mtd_gross_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-03-01T00:00:00.000Z' AND TIMESTAMP '2017-03-13T00:00:00.000Z'
GROUP BY merchant_provider
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
{ merchants: [],
  pagination: { order: 'asc', limit: 10, offset: 0, count: 0 } }
      ✓ random input with out of bounds query input (456ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantReport/*
Permissions: 
{ allow: [ 'analytics/getMerchantReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/merchantprovider/merchantprovider_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  merchant_provider,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS net_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN 1
        ELSE 0
      END
  ),0) AS mtd_sales_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN amount
        ELSE 0
      END
  ),0) AS mtd_gross_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
GROUP BY merchant_provider
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
    sale_count: '1',
    sale_gross_revenue: '139.99',
    refund_expenses: '0',
    refund_count: '0',
    net_revenue: '139.99',
    mtd_sales_count: '0',
    mtd_gross_count: '0' } ]
{ merchants: 
   [ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
       sale_count: '1',
       sale_gross_revenue: '139.99',
       refund_expenses: '0',
       refund_count: '0',
       net_revenue: '139.99',
       mtd_sales_count: '0',
       mtd_gross_count: '0' } ],
  pagination: { order: 'asc', limit: 10, offset: 0, count: 1 } }
      ✓ random input with new transaction type (520ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantReport/*
Permissions: 
{ allow: [ 'analytics/getMerchantReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/merchantprovider/merchantprovider_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  merchant_provider,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS net_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN 1
        ELSE 0
      END
  ),0) AS mtd_sales_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN amount
        ELSE 0
      END
  ),0) AS mtd_gross_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
GROUP BY merchant_provider
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
    sale_count: '0',
    sale_gross_revenue: '0',
    refund_expenses: '29.99',
    refund_count: '2',
    net_revenue: '-29.99',
    mtd_sales_count: '0',
    mtd_gross_count: '0' } ]
{ merchants: 
   [ { merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
       sale_count: '0',
       sale_gross_revenue: '0',
       refund_expenses: '29.99',
       refund_count: '2',
       net_revenue: '-29.99',
       mtd_sales_count: '0',
       mtd_gross_count: '0' } ],
  pagination: { order: 'asc', limit: 10, offset: 0, count: 1 } }
      ✓ random input with refund transaction type (520ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getMerchantReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getMerchantReport/*
Permissions: 
{ allow: [ 'analytics/getMerchantReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Merchant Report
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
product_schedule
[ '12529a17-ac32-4e46-b05b-83862843055d' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/merchantprovider/merchantprovider_report_product_schedule query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND product_schedule IN (\'12529a17-ac32-4e46-b05b-83862843055d\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report_product_schedule/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND product_schedule IN (\'12529a17-ac32-4e46-b05b-83862843055d\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'product_schedule' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/merchantprovider/merchantprovider_report_product_schedule/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  merchant_provider,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS net_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN 1
        ELSE 0
      END
  ),0) AS mtd_sales_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND datetime >= DATE_TRUNC('Month',current_date) THEN amount
        ELSE 0
      END
  ),0) AS mtd_gross_count
FROM f_product_schedules
WHERE 1=1
   AND product_schedule IN ('12529a17-ac32-4e46-b05b-83862843055d') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
GROUP BY merchant_provider
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
{ merchants: [],
  pagination: { order: 'asc', limit: 10, offset: 0, count: 0 } }
      1) random input with mixed transaction type and product_schedule filter
    report_transactions
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionsReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionsReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionsReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-13T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Transaction Report
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactions/transactions_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactions/transactions_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactions/transactions_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  ft.id,
  ft.datetime,
  ft.customer,
  ft.affiliate,
  ft.campaign,
  ft.merchant_provider,
  ft.amount,
  ft.processor_result,
  ft.type,
  null as cycle,
  null as recycle
FROM f_transactions ft
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
ORDER BY DATETIME asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (416ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionsReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionsReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionsReport' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
{ analyticsfilter: 
   { start: '2017-07-01T00:00:00.000Z',
     end: '2017-08-01T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Transaction Report
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactions/transactions_report query parameters
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactions/transactions_report/parameter_validation.json
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactions/transactions_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  ft.id,
  ft.datetime,
  ft.customer,
  ft.affiliate,
  ft.campaign,
  ft.merchant_provider,
  ft.amount,
  ft.processor_result,
  ft.type,
  null as cycle,
  null as recycle
FROM f_transactions ft
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-07-01T00:00:00.000Z' AND TIMESTAMP '2017-08-01T00:00:00.000Z'
ORDER BY DATETIME asc
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (395ms)
    report_transactions_summary
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-31T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-31T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '34.99',
    rebill_count: '1',
    rebill_revenue: '124.99',
    refund_expenses: '4.99',
    refund_count: '1',
    gross_revenue: '159.98',
    declines_count: '1',
    declines_revenue: '139.99',
    chargeback_count: '1',
    current_active_customer: '1',
    count_alert_count: 0 },
  { period: '2017-01-01T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '10.00',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '10.00',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '1',
    count_alert_count: 0 } ]
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '34.99',
    rebill_count: '1',
    rebill_revenue: '124.99',
    refund_expenses: '4.99',
    refund_count: '1',
    gross_revenue: '159.98',
    declines_count: '1',
    declines_revenue: '139.99',
    chargeback_count: '1',
    current_active_customer: '1',
    count_alert_count: 0 },
  { period: '2017-01-01T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '10.00',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '10.00',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '1',
    count_alert_count: 0 } ]
Testing period
{ period: '2016-12-31T23:00:00.000Z',
  sale_count: '1',
  sale_revenue: '34.99',
  rebill_count: '1',
  rebill_revenue: '124.99',
  refund_expenses: '4.99',
  refund_count: '1',
  gross_revenue: '159.98',
  declines_count: '1',
  declines_revenue: '139.99',
  chargeback_count: '1',
  current_active_customer: '1',
  count_alert_count: 0 }
Testing period
{ period: '2017-01-01T23:00:00.000Z',
  sale_count: '1',
  sale_revenue: '10.00',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '10.00',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '0',
  current_active_customer: '1',
  count_alert_count: 0 }
      ✓ random input (373ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '0',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '2',
    current_active_customer: '0',
    count_alert_count: 0 } ]
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '0',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '2',
    current_active_customer: '0',
    count_alert_count: 0 } ]
Testing period
{ period: '2017-01-01T23:00:00.000Z',
  sale_count: '0',
  sale_revenue: '0',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '0',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '2',
  current_active_customer: '0',
  count_alert_count: 0 }
      ✓ input to get chargeback transactions (420ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '0',
    declines_count: '6',
    declines_revenue: '1671.88',
    chargeback_count: '1',
    current_active_customer: '2',
    count_alert_count: 0 } ]
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '0',
    declines_count: '6',
    declines_revenue: '1671.88',
    chargeback_count: '1',
    current_active_customer: '2',
    count_alert_count: 0 } ]
Testing period
{ period: '2017-01-01T23:00:00.000Z',
  sale_count: '0',
  sale_revenue: '0',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '0',
  declines_count: '6',
  declines_revenue: '1671.88',
  chargeback_count: '1',
  current_active_customer: '2',
  count_alert_count: 0 }
      ✓ input to get declined transactions (511ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-07-01T00:00:00.000Z',
     end: '2017-07-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-07-01T00:00:00.000Z
2017-07-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-07-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-07-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-07-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-07-01T00:00:00.000Z' AND TIMESTAMP '2017-07-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
[]
      ✓ random input with out of bounds query input (491ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '4',
    sale_revenue: '129.08',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '129.08',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '2',
    count_alert_count: 0 } ]
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '4',
    sale_revenue: '129.08',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '129.08',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '2',
    count_alert_count: 0 } ]
Testing period
{ period: '2016-12-31T23:00:00.000Z',
  sale_count: '4',
  sale_revenue: '129.08',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '129.08',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '0',
  current_active_customer: '2',
  count_alert_count: 0 }
      ✓ input to get new transactions (529ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2017-01-04T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '3',
    rebill_revenue: '4034.09',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '4034.09',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '0',
    count_alert_count: 0 } ]
[ { period: '2017-01-04T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '3',
    rebill_revenue: '4034.09',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '4034.09',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '0',
    count_alert_count: 0 } ]
Testing period
{ period: '2017-01-04T23:00:00.000Z',
  sale_count: '0',
  sale_revenue: '0',
  rebill_count: '3',
  rebill_revenue: '4034.09',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '4034.09',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '0',
  current_active_customer: '0',
  count_alert_count: 0 }
      ✓ input to get rebill transactions (552ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-30T00:00:00.000Z' },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '34.00',
    refund_count: '2',
    gross_revenue: '0',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '0',
    count_alert_count: 0 } ]
[ { period: '2017-01-01T23:00:00.000Z',
    sale_count: '0',
    sale_revenue: '0',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '34.00',
    refund_count: '2',
    gross_revenue: '0',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '0',
    count_alert_count: 0 } ]
Testing period
{ period: '2017-01-01T23:00:00.000Z',
  sale_count: '0',
  sale_revenue: '0',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '34.00',
  refund_count: '2',
  gross_revenue: '0',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '0',
  current_active_customer: '0',
  count_alert_count: 0 }
      ✓ input to get refund transactions (511ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReport
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReport/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReport' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Timeseries
{ analyticsfilter: 
   { start: '2017-01-01T00:00:00.000Z',
     end: '2017-01-31T00:00:00.000Z',
     product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ] },
  pagination: { limit: 10, order: 'asc', offset: 0 } }
Get Target Period Count
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-31T00:00:00.000Z
30
Selected Period: 
{ name: 'day', seconds: 86400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
product_schedule
[ '12529a17-ac32-4e46-b05b-83862843055d' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_product_schedule query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND product_schedule IN (\'12529a17-ac32-4e46-b05b-83862843055d\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_product_schedule/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-31T00:00:00.000Z',
  product_schedule: [ '12529a17-ac32-4e46-b05b-83862843055d' ],
  order: 'asc',
  offset: 0,
  limit: 10,
  period: 'day',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND product_schedule IN (\'12529a17-ac32-4e46-b05b-83862843055d\') AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionSummaryReport',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end', 'period' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_product_schedule/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
/* transaction_summary_report */

SELECT
  date_trunc('day',datetime)  AS period,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) +
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_product_schedules
WHERE 1=1
   AND product_schedule IN ('12529a17-ac32-4e46-b05b-83862843055d') AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-31T00:00:00.000Z'
GROUP BY date_trunc('day',datetime)
LIMIT 10
OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '34.99',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '34.99',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '1',
    count_alert_count: 0 } ]
[ { period: '2016-12-31T23:00:00.000Z',
    sale_count: '1',
    sale_revenue: '34.99',
    rebill_count: '0',
    rebill_revenue: '0',
    refund_expenses: '0',
    refund_count: '0',
    gross_revenue: '34.99',
    declines_count: '0',
    declines_revenue: '0',
    chargeback_count: '0',
    current_active_customer: '1',
    count_alert_count: 0 } ]
Testing period
{ period: '2016-12-31T23:00:00.000Z',
  sale_count: '1',
  sale_revenue: '34.99',
  rebill_count: '0',
  rebill_revenue: '0',
  refund_expenses: '0',
  refund_count: '0',
  gross_revenue: '34.99',
  declines_count: '0',
  declines_revenue: '0',
  chargeback_count: '0',
  current_active_customer: '1',
  count_alert_count: 0 }
      ✓ testing product_schedule input (560ms)
    report_transactions_summary_report_summary
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ input to get chargeback transactions (511ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-30T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ input to get declined transactions (520ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-07-01T00:00:00.000Z
2017-08-01T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-07-01T00:00:00.000Z' AND TIMESTAMP '2017-08-01T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input with out of bounds query input (590ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ random input (533ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ input to get rebill transactions (519ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ input to get refund transactions (537ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionSummaryReportSummary
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionSummaryReportSummary/*
Permissions: 
{ allow: [ 'analytics/getTransactionSummaryReportSummary' ],
  deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions Report Summary
Period Selection
Parameters: 
2017-01-01T00:00:00.000Z
2017-01-13T00:00:00.000Z
1
Selected Period: 
{ name: 'month', seconds: 2678400 }
Append Period
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
reports/transactionsummary/transaction_summary_report_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  period: 'month',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: 
         { type: 'string',
           enum: [ 'new', 'rebill', 'refund', 'chargeback' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/reports/transactionsummary/transaction_summary_report_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS sale_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) AS refund_expenses,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN 1
        ELSE 0
      END
  ),0) AS refund_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) -
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'refund' THEN amount
        ELSE 0
      END
  ),0) gross_revenue,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline' THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_revenue,
  coalesce(SUM(
      CASE
        WHEN type = 'chargeback' THEN 1
        ELSE 0
      END
  ),0) AS chargeback_count,
  count(distinct case when type='new' then customer else null end) as current_active_customer,
  0 count_alert_count
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
LIMIT null
OFFSET null;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
      ✓ input to get new transactions (531ms)
    transaction_summary
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '0',
    new_sale_amount: '0',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '6',
    declines_amount: '1671.88',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ input to get declined transactions (477ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-07-01T00:00:00.000Z',
  end: '2017-08-01T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-07-01T00:00:00.000Z' AND TIMESTAMP '2017-08-01T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '0',
    new_sale_amount: '0',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ random input with out of bounds query input (522ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '0',
    new_sale_amount: '0',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '1',
    error_amount: '20.00',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ input to get error transactions (492ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '1',
    new_sale_amount: '100.00',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '1',
    main_sale_amount: '100.00' } ]
      ✓ input to get main transactions (519ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '1',
    new_sale_amount: '139.99',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ random input (515ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '0',
    new_sale_amount: '0',
    rebill_sale_count: '3',
    rebill_sale_amount: '4034.09',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ input to get rebill transactions (550ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '4',
    new_sale_amount: '129.08',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '1',
    upsell_sale_amount: '120.00',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ input to get sale transactions (564ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-30T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-30T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '0',
    new_sale_amount: '0',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ input to get zero transactions (515ms)
    transactions
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactions
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactions/*
Permissions: 
{ allow: [ 'analytics/getTransactions' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2016-01-01T00:00:00.000Z',
  end: '2016-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transactions query parameters
{ start: '2016-01-01T00:00:00.000Z',
  end: '2016-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions/parameter_validation.json
{ start: '2016-01-01T00:00:00.000Z',
  end: '2016-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  ft.id,
  ft.datetime,
  ft.customer,
  ft.creditcard,
  ft.merchant_provider,
  ft.campaign,
  ft.affiliate,
  ft.amount,
  ft.processor_result,
  ft.account,
  ft.type,
  ft.product_schedule,
  ft.subaffiliate_1,
  ft.subaffiliate_2,
  ft.subaffiliate_3,
  ft.subaffiliate_4,
  ft.subaffiliate_5,
  ft.subtype
FROM f_transactions ft
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2016-01-01T00:00:00.000Z' AND TIMESTAMP '2016-01-13T00:00:00.000Z'
ORDER BY DATETIME asc
LIMIT 10 OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[]
      ✓ zero input (521ms)
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactions
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactions/*
Permissions: 
{ allow: [ 'analytics/getTransactions' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transactions query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/TransactionsValidation',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     order: { type: 'string', enum: [ 'asc', 'desc' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: true },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: true,
        exclusiveMinimum: false },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  ft.id,
  ft.datetime,
  ft.customer,
  ft.creditcard,
  ft.merchant_provider,
  ft.campaign,
  ft.affiliate,
  ft.amount,
  ft.processor_result,
  ft.account,
  ft.type,
  ft.product_schedule,
  ft.subaffiliate_1,
  ft.subaffiliate_2,
  ft.subaffiliate_3,
  ft.subaffiliate_4,
  ft.subaffiliate_5,
  ft.subtype
FROM f_transactions ft
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
ORDER BY DATETIME asc
LIMIT 10 OFFSET 0;

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { id: 'e624af6a-21dc-4c64-b310-3b0523f8ca42',
    datetime: '2017-01-06T17:40:41.405Z',
    customer: '24f7c851-29d4-4af9-87c5-0298fa74c689',
    creditcard: 'df84f7bb-06bd-4daa-b1a3-6a2c113edd72',
    merchant_provider: '6c40761d-8919-4ad6-884d-6a46a776cfb9',
    campaign: '70a6689a-5814-438b-b9fd-dd484d0812f9',
    affiliate: '6b6331f6-7f84-437a-9ac6-093ba301e455',
    amount: '34.99',
    processor_result: 'success',
    account: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    type: 'new',
    product_schedule: '12529a17-ac32-4e46-b05b-83862843055d',
    subaffiliate_1: '',
    subaffiliate_2: '',
    subaffiliate_3: '',
    subaffiliate_4: '',
    subaffiliate_5: '',
    subtype: 'order' },
  { id: '99999999-999e-44aa-999e-aaa9a99a9999',
    datetime: '2017-01-06T17:40:41.405Z',
    customer: '99999999-999e-44aa-999e-aaa9a99a9999',
    creditcard: '99999999-999e-44aa-999e-aaa9a99a9999',
    merchant_provider: '99999999-999e-44aa-999e-aaa9a99a9999',
    campaign: '99999999-999e-44aa-999e-aaa9a99a9999',
    affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    amount: '0.00',
    processor_result: 'success',
    account: 'd26c1887-7ad4-4a44-be0b-e80dbce22774',
    type: 'new',
    product_schedule: '99999999-999e-44aa-999e-aaa9a99a9999',
    subaffiliate_1: '',
    subaffiliate_2: '',
    subaffiliate_3: '',
    subaffiliate_4: '',
    subaffiliate_5: '',
    subtype: 'upsell' } ]
      ✓ random input (582ms)
    transactions_by_facet
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionsByFacet
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionsByFacet/*
Permissions: 
{ allow: [ 'analytics/getTransactionsByFacet' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transactions By Facet
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transactions_by_facet query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions_by_facet/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  order: 'asc',
  offset: 0,
  limit: 10,
  facet: 'affiliate',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } },
     limit: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: false },
     offset: 
      { type: [ 'integer' ],
        minimum: 0,
        maximum: 100,
        exclusiveMaximum: false,
        exclusiveMinimum: false },
     facet: 
      { type: 'string',
        enum: 
         [ 'account',
           'campaign',
           'merchant_provider',
           'product_schedule',
           'type',
           'subtype',
           'processor_result',
           'affiliate',
           'subaffiliate_1',
           'subaffiliate_2',
           'subaffiliate_3',
           'subaffiliate_4',
           'subaffiliate_5' ] } },
  required: [ 'start', 'end', 'facet', 'order', 'limit', 'offset' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transactions_by_facet/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Get Token
Replace Tokens With Values
Query:
SELECT
  affiliate,
  transactions_count,
  SUM(CASE WHEN R_ID IN (10+1 + 0,0) THEN all_transactions_count ELSE 0 END)
  OVER () AS all_transactions_count,
  transactions_amount,
  SUM(CASE WHEN R_ID IN (10+1 + 0,0) THEN all_transactions_amount ELSE 0 END)
  OVER () AS all_transactions_amount
FROM
  (SELECT
     R_ID,
     affiliate,
     transactions_count,
     all_transactions_count,
     transactions_amount,
     all_transactions_amount
   FROM
     (SELECT R_ID,
        CASE WHEN R_ID = 10+1 + 0
          THEN 'all-other'
        ELSE affiliate END           AS affiliate,
        CASE WHEN R_ID = 10+1 + 0
          THEN all_transactions_count - r_sum_count
        ELSE transactions_count END  AS transactions_count,
        all_transactions_count,
        CASE WHEN R_ID = 10+1 + 0
          THEN all_transactions_amount - r_sum_amount
        ELSE transactions_amount END AS transactions_amount,
        all_transactions_amount
      FROM
        (
          SELECT
            affiliate,
            transactions_count,
            all_transactions_count,
            transactions_amount,
            sum(transactions_amount)
            OVER ()
                                                 AS       all_transactions_amount,
            sum(transactions_count)
            OVER (
              ORDER BY transactions_count asc
              ROWS BETWEEN 10 PRECEDING AND 0 FOLLOWING ) r_sum_count,
            sum(transactions_amount)
            OVER (
              ORDER BY transactions_count asc
              ROWS BETWEEN 10 PRECEDING AND 0 FOLLOWING ) r_sum_amount,
            ROW_NUMBER()
            OVER (
              ORDER BY transactions_count asc ) AS       R_ID
          FROM
            (
              SELECT
                affiliate,
                count(*)    AS transactions_count,
                sum(count(*))
                OVER ( )    AS all_transactions_count,
                sum(amount) AS transactions_amount
              FROM f_transactions
              WHERE 1 = 1
                    AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
                    AND affiliate IS NOT NULL
              GROUP BY affiliate
            ) t1
          ORDER BY transactions_count asc
          LIMIT 10+1
          OFFSET 0
        ) t2 ) t3
   UNION ALL
     SELECT 0 AS R_ID,
       'none'      AS affiliate,
       count(*)    AS transactions_count,
       1           AS all_transactions_count,
       sum(amount) AS transactions_amount,
       sum(amount) AS all_transactions_amount
     FROM f_transactions
     WHERE 1 = 1
           AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z'
           AND affiliate IS NULL
     GROUP BY affiliate
  ) t1
ORDER BY transactions_count asc

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { affiliate: '6b6331f6-7f84-437a-9ac6-093ba301e455',
    transactions_count: '1',
    all_transactions_count: '0',
    transactions_amount: '139.99',
    all_transactions_amount: '0' },
  { affiliate: '99999999-999e-44aa-999e-aaa9a99a9999',
    transactions_count: '1',
    all_transactions_count: '0',
    transactions_amount: '0.00',
    all_transactions_amount: '0' } ]
      ✓ random input (564ms)
    transactions_overview
Destroy
Get Destroy Query
Get Table Drop Queries
Get Table Filenames
Get Schema Drop Queries
Get Table Filenames
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Get Table Name From Filename
Execute Query
DROP TABLE IF EXISTS d_bin; DROP TABLE IF EXISTS d_datetime; DROP TABLE IF EXISTS d_event_type; DROP TABLE IF EXISTS d_merchant_provider; DROP TABLE IF EXISTS d_processor_result; DROP TABLE IF EXISTS f_activity; DROP TABLE IF EXISTS f_events; DROP TABLE IF EXISTS f_product_schedules; DROP TABLE IF EXISTS f_queue_count; DROP TABLE IF EXISTS f_rebills; DROP TABLE IF EXISTS f_sessions; DROP TABLE IF EXISTS f_transactions; DROP SCHEMA IF EXISTS backup CASCADE; DROP SCHEMA IF EXISTS sys_sixcrm CASCADE;
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Redshift tables
Deploy Non-Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Execute Queries
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists backup;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Create redshift schema
29.07.2017 A.Zelen Moved to own directory
*/

create schema if not exists sys_sixcrm;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Non-versioned query: 
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number integer identity,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Get Query From Path
Non-versioned query: 
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Execute Queries
Execute Query
/*
09.01.2017 A.Zelen Table for tracking migrations
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_change_log
(
  change_number serial ,
  datetime timestamp,
  description varchar(500)
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_change_log TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
03.07.2017 A.Zelen Table for tracking versions of tables
03.07.2017 A.Zelen Logic from idempotent versioning
29.07.2017 A.Zelen Moved to own directory
*/

CREATE TABLE IF NOT EXISTS sys_sixcrm.sys_table_version
(
  table_name varchar(100),
  version integer,
  datetime timestamp
);

GRANT INSERT,SELECT,DELETE,DELETE ON sys_sixcrm.sys_table_version TO PUBLIC;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Deploy Versioned Tables
Deploy Directory SQL
Get Directory SQL Filepaths
Get Queries
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_bin'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_bin.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_datetime'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_datetime.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_event_type'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_event_type.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_merchant_provider'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_merchant_provider.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'd_processor_result'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/d_processor_result.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_activity'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_activity.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_events'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_events.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_product_schedules'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_product_schedules.sql
Database Version Number: 0
File Version Number 3
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_queue_count'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_queue_count.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_rebills'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_rebills.sql
Database Version Number: 0
File Version Number 2
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_sessions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_sessions.sql
Database Version Number: 0
File Version Number 1
Get Query From Path
Determine Table Version
Get Remote Table Version
Get Table Name From Filename
Execute Query
        SELECT           version         FROM            sys_sixcrm.sys_table_version         WHERE           table_name = 'f_transactions'
Query Redshift
Instantiate Redshift
Get Version Number From File
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
filepath: /home/aldo/Projects/toptal/SixCrm/sixcrmserverless/model/redshift/tables/f_transactions.sql
Database Version Number: 0
File Version Number 3
Execute Queries
Execute Query
/*
27.06.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_bin;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_bin';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_bin',1,now();


CREATE TABLE IF NOT EXISTS d_bin
(
  binnumber    INTEGER      NOT NULL PRIMARY KEY ,
  brand        VARCHAR(128) NOT NULL ,
  bank         VARCHAR(128) NOT NULL ,
  type         VARCHAR(128) ,
  level        VARCHAR(128) ,
  country      VARCHAR(128) NOT NULL ,
  info         VARCHAR(128) NOT NULL ,
  country_iso  VARCHAR(2) NOT NULL ,
  country2_iso VARCHAR(3) NOT NULL ,
  country3_iso INTEGER ,
  webpage      VARCHAR(128) ,
  phone        VARCHAR(128) 

)
   ;

COMMENT ON TABLE d_bin IS 'Bin dimensional table loaded on create';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Date dimensional table.Set distribution style to all, recommended for dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_datetime;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_datetime';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_datetime',1,now();


CREATE TABLE IF NOT EXISTS d_datetime
(
  datetime TIMESTAMP 
) ;

COMMENT ON TABLE d_datetime IS 'Date dimensional table distribution style set to all, recommended for dimensional table';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.05.2017 A.Zelen Results dimensional table
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_event_type;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_event_type';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'd_event_type',1,now();


CREATE TABLE IF NOT EXISTS d_event_type
(
  event_type varchar(16)
) ;

COMMENT ON TABLE d_event_type IS ' 24.04.2017 A.Zelen Results dimensional table distribution style set to all, recommended for dimensional tables';


insert into d_event_type(event_type) values('click');
insert into d_event_type(event_type) values('lead');
insert into d_event_type(event_type) values('order');
insert into d_event_type(event_type) values('upsell');
insert into d_event_type(event_type) values('confirm');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.06.2017 A.Zelen Merchant provider types. Dimensional table is needed for faster upload.
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_merchant_provider;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_merchant_provider';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_merchant_provider',1,now();


CREATE TABLE IF NOT EXISTS d_merchant_provider
(
  merchant_provider VARCHAR(36),
  activity_flag     VARCHAR(8)
) ;

COMMENT ON COLUMN d_merchant_provider.activity_flag IS 'Active, inactive';
COMMENT ON TABLE d_merchant_provider IS 'Dimensional table of all merchant providers';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS d_processor_result;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='d_processor_result';

INSERT INTO sys_sixcrm.sys_table_version
    SELECT 'd_processor_result',1,now();


CREATE TABLE IF NOT EXISTS d_processor_result
(
  processor_result varchar(16)
) ;

COMMENT ON TABLE d_processor_result IS ' 24.04.2017 A.Zelen Results dimensional table Set distribution style to all, recommended for dimensional tables';

insert into d_processor_result(processor_result) values('success');
insert into d_processor_result(processor_result) values('decline');
insert into d_processor_result(processor_result) values('error');

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
14.05.2017 A.Zelen Activity Fact table, anticipating accumulating fact table type
02.06.2017 A.Zelen Changing the activity table
07.06.2017 A.Zelen Added account
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_activity;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_activity';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_activity',1,now();


CREATE TABLE IF NOT EXISTS f_activity
(
  id                   VARCHAR(36)  NOT NULL ,
  datetime             TIMESTAMP    NOT NULL ,
  account              VARCHAR(36) ,
  actor                VARCHAR(100) NOT NULL ,
  actor_type           VARCHAR(20) ,
  action               VARCHAR(20) ,
  acted_upon           VARCHAR(100) ,
  acted_upon_type      VARCHAR(20) ,
  associated_with      VARCHAR(100) ,
  associated_with_type VARCHAR(20) 
) ;


COMMENT ON TABLE f_activity IS 'Fact table build around activities of actors';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
02.05.2017 A.Zelen Initial table definition
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_events;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_events';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_events',1,now();


CREATE TABLE IF NOT EXISTS f_events
(
  session          VARCHAR(36) NOT NULL,
  type             VARCHAR(10)  NOT NULL,
  datetime         TIMESTAMP    NOT NULL,
  account          VARCHAR(36)  NOT NULL,
  campaign         VARCHAR(36)  NOT NULL,
  product_schedule VARCHAR(36),
  affiliate        VARCHAR(36),
  subaffiliate_1   VARCHAR(36),
  subaffiliate_2   VARCHAR(36),
  subaffiliate_3   VARCHAR(36),
  subaffiliate_4   VARCHAR(36),
  subaffiliate_5   VARCHAR(36)
) ;

COMMENT ON TABLE d_datetime IS 'Fact table with information about events';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning
15.01.2017 A.Zelen Changing product schedule fact table to reflect transactions for faster query

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_product_schedules;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_product_schedules';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_product_schedules',3,now();

CREATE TABLE IF NOT EXISTS f_product_schedules
(
  transactions_id  VARCHAR(36) ,
  product_schedule VARCHAR(36) NOT NULL ,
  datetime         TIMESTAMP   NOT NULL ,
  customer            VARCHAR(36)  NOT NULL ,
  creditcard          VARCHAR(36)  NOT NULL ,
  merchant_provider   VARCHAR(36)  NOT NULL ,
  campaign            VARCHAR(36)  NOT NULL ,
  affiliate           VARCHAR(36) ,
  amount              NUMERIC(8, 2) NOT NULL,
  processor_result    VARCHAR(16)   NOT NULL ,
  account             VARCHAR(36)  NOT NULL ,
  type    VARCHAR(10)   NOT NULL ,
  subtype VARCHAR(10)   NOT NULL ,
  subaffiliate_1      VARCHAR(36) ,
  subaffiliate_2      VARCHAR(36) ,
  subaffiliate_3      VARCHAR(36) ,
  subaffiliate_4      VARCHAR(36) ,
  subaffiliate_5      VARCHAR(36) ,
  prepaid             BOOLEAN      ,
  result              VARCHAR(16) ,
  associated_transaction VARCHAR(36) 
)
;

COMMENT ON TABLE f_product_schedules IS 'Fact table build on different product schedules in data tied to transactions'
;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
11.10.2017 A.Zelen Fact table containing queue counts

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_queue_count;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_queue_count';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_queue_count',2,now();

CREATE TABLE f_queue_count (
  queuename    VARCHAR(20)          NOT NULL ,
  account  VARCHAR(36)              NOT NULL ,
  count    INTEGER,
  datetime TIMESTAMP 
)
  ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
30.11.2017 A.Zelen Fact table containing queue counts
08.12.2017 A.Zelen Changed sortkey

TABLE_VERSION 2
*/

DROP TABLE IF EXISTS f_rebills;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_rebills';

INSERT INTO sys_sixcrm.sys_table_version
   SELECT 'f_rebills',2,now();

CREATE TABLE f_rebills (
  id_rebill VARCHAR(36),
  current_queuename    VARCHAR(20) NOT NULL ,
  previous_queuename    VARCHAR(20) NOT NULL ,
  account  VARCHAR(36) NOT NULL ,
  datetime TIMESTAMP 
) ;

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
05.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 1
*/

DROP TABLE IF EXISTS f_sessions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_sessions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_sessions',1,now();

/*
Technical Debt:  completed is now a boolean
*/
CREATE TABLE IF NOT EXISTS f_sessions
(
  id             VARCHAR(36) NOT NULL,
  account        VARCHAR(36) NOT NULL,
  customer       VARCHAR(36) NOT NULL,
  campaign       VARCHAR(36) NOT NULL,
  completed      VARCHAR(6)  NOT NULL,
  created_at     TIMESTAMP,
  updated_at     TIMESTAMP,
  affiliate      VARCHAR(36),
  subaffiliate_1 VARCHAR(36),
  subaffiliate_2 VARCHAR(36),
  subaffiliate_3 VARCHAR(36),
  subaffiliate_4 VARCHAR(36),
  subaffiliate_5 VARCHAR(36),
  cid            VARCHAR(36)

) ;

COMMENT ON TABLE f_sessions IS 'Fact table build for session data';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Execute Query
/*
21.04.2017 A.Zelen Initial table definition
03.07.2017 A.Zelen Logic from idempotent versioning

TABLE_VERSION 3
*/

DROP TABLE IF EXISTS f_transactions;

DELETE FROM sys_sixcrm.sys_table_version WHERE table_name ='f_transactions';

INSERT INTO sys_sixcrm.sys_table_version
     SELECT 'f_transactions',3,now();


CREATE TABLE IF NOT EXISTS f_transactions
(
    id                  VARCHAR(36)  NOT NULL 
      CONSTRAINT f_transactions_pkey
      PRIMARY KEY,
    datetime            TIMESTAMP     NOT NULL ,
    customer            VARCHAR(36)  NOT NULL ,
    creditcard          VARCHAR(36)  NOT NULL ,
    merchant_provider   VARCHAR(36)  NOT NULL ,
    campaign            VARCHAR(36)  NOT NULL ,
    affiliate           VARCHAR(36) ,
    amount              NUMERIC(8, 2) NOT NULL,
    processor_result    VARCHAR(16)   NOT NULL ,
    account             VARCHAR(36)  NOT NULL ,
    type    VARCHAR(10)   NOT NULL ,
    subtype VARCHAR(10)   NOT NULL ,
    product_schedule    VARCHAR(36)  ,
    subaffiliate_1      VARCHAR(36) ,
    subaffiliate_2      VARCHAR(36) ,
    subaffiliate_3      VARCHAR(36) ,
    subaffiliate_4      VARCHAR(36) ,
    subaffiliate_5      VARCHAR(36) ,
    prepaid             BOOLEAN      ,
    result              VARCHAR(16) ,
    associated_transaction VARCHAR(36) 
  )
    ;

COMMENT ON TABLE f_transactions IS 'Main Fact table with information about transactions';
COMMENT ON COLUMN f_transactions.product_schedule IS 'Column is depreciated and removed';

Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Seeding Test database with getTransactionOverview
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Can
Validate Permissions
Action Checks Disabled
Build Permission String
Get Permissions
Build Permission Object
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Has Recursive
Permission String: analytics/getTransactionOverview/*
Permissions: 
{ allow: [ 'analytics/getTransactionOverview' ], deny: [ '*' ] }
Has Permission
Is Universal Permission
Get Universal Permissions
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Has Permission Superset
Build Canonical Permission String
Build Canonical Permission String
Is Permission Match
Has Wildcard Access
Has Specific Permission
Has Canonical Permission
Build Canonical Permission String
Build Canonical Permission String
Set Cache Settings
Get Transaction Overview
Get Results
Append Account
Are ACLs Disabled
Action Checks Disabled
Create Query Filter
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ] }
[ 'campaign',
  'merchant_provider',
  'product_schedule',
  'affiliate',
  's1',
  's2',
  's3',
  's4',
  's5',
  'account' ]
account
[ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ]
Validating:
transaction_summary query parameters
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
Get Query Parameter Validation String
Get Query Parameter Validation Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/parameter_validation.json
{ start: '2017-01-01T00:00:00.000Z',
  end: '2017-01-13T00:00:00.000Z',
  account: [ 'd26c1887-7ad4-4a44-be0b-e80dbce22774' ],
  filter: ' AND account IN (\'d26c1887-7ad4-4a44-be0b-e80dbce22774\')' }
{ '$schema': 'http://json-schema.org/schema#',
  id: '/AggregationProcessorAmountInput',
  type: 'object',
  definitions: 
   { UUIDv4: 
      { type: 'string',
        pattern: '^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$' },
     ISO8601: 
      { type: 'string',
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]+)?(([+-][0-9]{2}:[0-9]{2})|Z)?$' } },
  properties: 
   { start: { '$ref': '#/definitions/ISO8601' },
     end: { '$ref': '#/definitions/ISO8601' },
     period: 
      { type: 'string',
        enum: [ 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year' ] },
     account: 
      { type: 'array',
        minItems: 1,
        items: 
         { anyOf: 
            [ { type: 'string', pattern: '^\\*$' },
              { '$ref': '#/definitions/UUIDv4' } ] },
        uniqueItems: true },
     campaign: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     merchant_provider: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'affiliate:': 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     'subaffiliate_1:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_2:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_3:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_4:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     'subaffiliate_5:': 
      { type: 'array',
        minItems: 1,
        items: { type: 'string' },
        uniqueItems: true },
     product_schedule: 
      { type: 'array',
        minItems: 1,
        items: { '$ref': '#/definitions/UUIDv4' },
        uniqueItems: true },
     processor_result: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'success', 'decline', 'error' ] } },
     type: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'new', 'rebill' ] } },
     subtype: 
      { type: 'array',
        minItems: 1,
        uniqueItems: true,
        items: { type: 'string', enum: [ 'main', 'upsell' ] } } },
  required: [ 'start', 'end' ] }
Input parameters validate.
Get Query String
Get Query Filepath
Filepath: 
/home/aldo/Projects/toptal/SixCrm/sixcrmserverless/controllers/analytics/queries/transaction_summary/query.sql
Parse Query Parameters
Parse
Get Token
Get Token Value
Recurse
Recurse
Recurse
Recurse
Get Token
Get Token Value
Recurse
Get Token
Get Token Value
Recurse
Recurse
Get Token
Replace Tokens With Values
Query:
SELECT
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN 1
        ELSE 0
      END
  ),0) AS new_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' THEN amount
        ELSE 0
      END
  ),0) AS new_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN 1
        ELSE 0
      END
  ),0) AS rebill_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'rebill' THEN amount
        ELSE 0
      END
  ),0) AS rebill_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN 1
        ELSE 0
      END
  ),0) AS declines_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'decline'  THEN amount
        ELSE 0
      END
  ),0) AS declines_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN 1
        ELSE 0
      END
  ),0) AS error_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'error'  THEN amount
        ELSE 0
      END
  ),0) AS error_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN 1
        ELSE 0
      END
  ),0) AS upsell_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype='upsell' THEN amount
        ELSE 0
      END
  ),0) AS upsell_sale_amount,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN 1
        ELSE 0
      END
  ),0) AS main_sale_count,
  coalesce(SUM(
      CASE
        WHEN processor_result = 'success' AND type = 'new' AND subtype ='main' THEN amount
        ELSE 0
      END
  ),0) AS main_sale_amount
FROM f_transactions
WHERE 1=1
   AND account IN ('d26c1887-7ad4-4a44-be0b-e80dbce22774')
  AND datetime BETWEEN TIMESTAMP '2017-01-01T00:00:00.000Z' AND TIMESTAMP '2017-01-13T00:00:00.000Z';

Get Transformation Function
Get Transformation Function Filepath
Use Cache
Validate Promise
Cache Active
The cache is not active.  Please check serverless configuration.
Query Redshift
Instantiate Redshift
Redshift host: localhost
Postgress configuration:
{ user: 'root',
  database: 'circle_test',
  password: '',
  host: 'localhost',
  port: 5432,
  idleTimeoutMillis: 30000 }
Get Class Name
Is Object
Open Connection
Query Raw
Transform Result
Is Object
Close Connection
Transform Result
Clone
Is Object
Cache Active
The cache is not active.  Please check serverless configuration.
Transformation Function
[ { new_sale_count: '1',
    new_sale_amount: '139.99',
    rebill_sale_count: '0',
    rebill_sale_amount: '0',
    declines_count: '0',
    declines_amount: '0',
    error_count: '0',
    error_amount: '0',
    upsell_sale_count: '0',
    upsell_sale_amount: '0',
    main_sale_count: '0',
    main_sale_amount: '0' } ]
      ✓ random input (525ms)


  71 passing (40s)
  1 failing

  1) queries/redshift-queries.js report_merchantprovider random input with mixed transaction type and product_schedule filter:

      AssertionError: [] does not equal [{"merchant_provider":"6c40761d-8919-4ad6-884d-6a46a776cfb9","sale_count":"1","sale_gross_revenue":"179.99","refund_expenses":"200.00","refund_count":"1","net_revenue":"-20.01","mtd_sales_count":"0","mtd_gross_count":"0"}]: expected [] to deeply equal [ Array(1) ]
      + expected - actual

      -[]
      +[
      +  {
      +    "merchant_provider": "6c40761d-8919-4ad6-884d-6a46a776cfb9"
      +    "mtd_gross_count": "0"
      +    "mtd_sales_count": "0"
      +    "net_revenue": "-20.01"
      +    "refund_count": "1"
      +    "refund_expenses": "200.00"
      +    "sale_count": "1"
      +    "sale_gross_revenue": "179.99"
      +  }
      +]
      
      at Assertion.assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)
      at Assertion.ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)
      at analyticsController.executeAnalyticsFunction.then (test/functional/queries/redshift-queries.test.js:53:58)
      at process._tickDomainCallback (internal/process/next_tick.js:135:7)




=============================== Coverage summary ===============================
Statements   : 42.99% ( 1811/4213 )
Branches     : 22.23% ( 390/1754 )
Functions    : 45.45% ( 270/594 )
Lines        : 43.06% ( 1789/4155 )
================================================================================
